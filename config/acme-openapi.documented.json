{"openapi":"3.1.0","info":{"title":"Acme Developer API","description":"The Acme Developer API is designed to provide a predictableo programmatic interface for accessing your Acme account through an API and transaction webhooks.\nNote that your API key is a secret and should be treated as such. Don't share it with anyone, including us. We will never ask you for it.\n","version":"1.0.0","termsOfService":"https://acme.com/legal#terms","contact":{"email":"support@acme.com"}},"servers":[{"url":"https://api.acme.com/v1","description":"Acme production API server"},{"url":"https://sandbox.acme.com/v1","description":"Sandbox environment that provides key functionality mirroring production"}],"tags":[{"name":"3DS"},{"name":"Account"},{"name":"Account Holder"},{"name":"Auth Stream Access (ASA)"},{"name":"Authorization Rules"},{"name":"Balance"},{"name":"Card"},{"name":"Card Product"},{"name":"Card Program"},{"name":"Digital Card Art"},{"name":"Dispute"},{"name":"Event"},{"name":"External Bank Account"},{"name":"Financial Account"},{"name":"Payment"},{"name":"Responder Endpoints"},{"name":"Statement"},{"name":"Status"},{"name":"Tokenization"},{"name":"Transaction"}],"paths":{"/accounts/{account_token}":{"get":{"tags":["Account"],"summary":"Get account","description":"Get account configuration such as spend limits.","operationId":"getAccountByToken","parameters":[{"$ref":"#/components/parameters/accountToken"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountConfiguration"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthorized"},"404":{"$ref":"#/components/responses/NotFound"},"422":{"$ref":"#/components/responses/UnprocessableEntity"},"429":{"$ref":"#/components/responses/TooManyRequests"}},"x-codeSamples":[{"lang":"JavaScript","source":"import MeorphisTest4 from 'meorphis-test-4';\n\nconst meorphisTest4 = new MeorphisTest4();\n\nasync function main() {\n  const accountconfiguration = await meorphisTest4.accounts.retrieve('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');\n\n  console.log(accountconfiguration.token);\n}\n\nmain();"},{"lang":"Python","source":"from meorphis_test_4 import MeorphisTest4\n\nclient = MeorphisTest4()\naccount = client.accounts.retrieve(\n    \"182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e\",\n)\nprint(account.token)"}]},"patch":{"tags":["Account"],"summary":"Update account","description":"Update account configuration such as spend limits and verification address. Can only be run on accounts that are part of the program managed by this API key.\n\nAccounts that are in the `PAUSED` state will not be able to transact or create new cards.\n","operationId":"patchAccountByToken","parameters":[{"$ref":"#/components/parameters/accountToken"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"daily_spend_limit":{"type":"integer","default":125000,"description":"Amount (in cents) for the account's daily spend limit.\nBy default the daily spend limit is set to $1,250.\n","minimum":0},"lifetime_spend_limit":{"type":"integer","default":0,"description":"Amount (in cents) for the account's lifetime spend limit. Once this limit is reached, no transactions will be accepted on any card created for this account until the limit is updated.\nNote that a spend limit of 0 is effectively no limit, and should only be used to reset or remove a prior limit. Only a limit of 1 or above will result in declined transactions due to checks against the account limit. This behavior differs from the daily spend limit and the monthly spend limit.\n","minimum":0},"monthly_spend_limit":{"type":"integer","default":500000,"description":"Amount (in cents) for the account's monthly spend limit.\nBy default the monthly spend limit is set to $5,000.\n","minimum":0},"verification_address":{"type":"object","description":"Address used during Address Verification Service (AVS) checks during transactions if enabled via Auth Rules.","properties":{"address1":{"type":"string"},"address2":{"type":"string"},"city":{"type":"string"},"state":{"type":"string"},"postal_code":{"type":"string"},"country":{"type":"string"}}},"state":{"type":"string","enum":["ACTIVE","PAUSED"],"description":"Account states."}}},"examples":{"setDailySpendLimit":{"summary":"Update daily spend limit","value":{"daily_spend_limit":1000}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountConfiguration"},"examples":{"exampleResponse":{"value":{"token":"ecbd1d58-0299-48b3-84da-6ed7f5bf9ec1","state":"ACTIVE","spend_limit":{"daily":1000,"monthly":40000,"lifetime":100000},"verification_address":{"address1":"5 Broad Street","address2":"","city":"New York","state":"NY","postal_code":"10001","country":"USA"}}}}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthorized"},"404":{"$ref":"#/components/responses/NotFound"},"422":{"$ref":"#/components/responses/UnprocessableEntity"},"429":{"$ref":"#/components/responses/TooManyRequests"}},"x-codeSamples":[{"lang":"JavaScript","source":"import MeorphisTest4 from 'meorphis-test-4';\n\nconst meorphisTest4 = new MeorphisTest4();\n\nasync function main() {\n  const accountconfiguration = await meorphisTest4.accounts.update('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');\n\n  console.log(accountconfiguration.token);\n}\n\nmain();"},{"lang":"Python","source":"from meorphis_test_4 import MeorphisTest4\n\nclient = MeorphisTest4()\naccount = client.accounts.update(\n    \"182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e\",\n)\nprint(account.token)"}]}},"/accounts/{account_token}/credit_configuration":{"get":{"tags":["Account"],"summary":"Get an Account's credit configuration","description":"Get an Account's credit configuration","operationId":"getAccountCreditConfiguration","parameters":[{"$ref":"#/components/parameters/accountToken"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BusinessAccount"}}}},"401":{"$ref":"#/components/responses/Unauthorized"},"409":{"$ref":"#/components/responses/Forbidden"},"429":{"$ref":"#/components/responses/TooManyRequests"}},"x-codeSamples":[{"lang":"JavaScript","source":"import MeorphisTest4 from 'meorphis-test-4';\n\nconst meorphisTest4 = new MeorphisTest4();\n\nasync function main() {\n  const businessaccount = await meorphisTest4.accounts.creditConfiguration.retrieve(\n    '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',\n  );\n\n  console.log(businessaccount.token);\n}\n\nmain();"},{"lang":"Python","source":"from meorphis_test_4 import MeorphisTest4\n\nclient = MeorphisTest4()\ncredit_configuration = client.accounts.credit_configuration.retrieve(\n    \"182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e\",\n)\nprint(credit_configuration.token)"}]},"patch":{"tags":["Account"],"summary":"Update a Business Accounts credit configuration","description":"Update a Business Accounts credit configuration","operationId":"patchAccountCreditConfiguration","parameters":[{"$ref":"#/components/parameters/accountToken"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountCreditConfigurationRequest"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BusinessAccount"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthorized"},"404":{"$ref":"#/components/responses/NotFound"},"409":{"$ref":"#/components/responses/Forbidden"},"429":{"$ref":"#/components/responses/TooManyRequests"}},"x-codeSamples":[{"lang":"JavaScript","source":"import MeorphisTest4 from 'meorphis-test-4';\n\nconst meorphisTest4 = new MeorphisTest4();\n\nasync function main() {\n  const businessaccount = await meorphisTest4.accounts.creditConfiguration.update(\n    '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',\n  );\n\n  console.log(businessaccount.token);\n}\n\nmain();"},{"lang":"Python","source":"from meorphis_test_4 import MeorphisTest4\n\nclient = MeorphisTest4()\ncredit_configuration = client.accounts.credit_configuration.update(\n    \"182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e\",\n)\nprint(credit_configuration.token)"}]}},"/cards":{"post":{"tags":["Card"],"summary":"Create card","description":"Create a new virtual or physical card. Parameters `pin`, `shipping_address`, and `product_id` only apply to physical cards.\n","operationId":"postCards","parameters":[{"$ref":"#/components/parameters/idempotencyKey"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["type"],"properties":{"account_token":{"type":"string","format":"uuid","description":"Globally unique identifier for the account that the card will be associated with. Required for programs enrolling users using the [/account\\_holders endpoint](https://docs.acme.com/docs/account-holders-kyc). See [Managing Your Program](doc:managing-your-program) for more information.\n"},"card_program_token":{"type":"string","format":"uuid","description":"For card programs with more than one BIN range. This must be configured with Acme before use. Identifies the card program/BIN range under which to create the card. If omitted, will utilize the program's default `card_program_token`. In Sandbox, use 00000000-0000-0000-1000-000000000000 and 00000000-0000-0000-2000-000000000000 to test creating cards on specific card programs.","example":"00000000-0000-0000-1000-000000000000"},"exp_month":{"type":"string","description":"Two digit (MM) expiry month. If neither `exp_month` nor `exp_year` is provided, an expiration date will be generated.","minLength":2,"maxLength":2,"example":"06"},"exp_year":{"type":"string","description":"Four digit (yyyy) expiry year. If neither `exp_month` nor `exp_year` is provided, an expiration date will be generated.","minLength":4,"maxLength":4,"example":"2027"},"memo":{"type":"string","description":"Friendly name to identify the card. We recommend against using this field to store JSON data as it can cause unexpected behavior.","example":"New Card"},"spend_limit":{"type":"integer","description":"Amount (in cents) to limit approved authorizations. Transaction requests above the spend limit will be declined. Note that a spend limit of 0 is effectively no limit, and should only be used to reset or remove a prior limit. Only a limit of 1 or above will result in declined transactions due to checks against the card limit.","example":0,"minimum":0},"spend_limit_duration":{"type":"string","enum":["ANNUALLY","FOREVER","MONTHLY","TRANSACTION"],"description":"Spend limit duration values:\n* `ANNUALLY` - Card will authorize transactions up to spend limit in a calendar year.\n* `FOREVER` - Card will authorize only up to spend limit for the entire lifetime of the card.\n* `MONTHLY` - Card will authorize transactions up to spend limit for the trailing month. Month is calculated as this calendar date one month prior.\n* `TRANSACTION` - Card will authorize multiple transactions if each individual transaction is under the spend limit.\n"},"state":{"type":"string","enum":["OPEN","PAUSED"],"description":"Card state values:\n* `OPEN` - Card will approve authorizations (if they match card and account parameters).\n* `PAUSED` - Card will decline authorizations, but can be resumed at a later time.\n"},"type":{"type":"string","default":"VIRTUAL","enum":["VIRTUAL","PHYSICAL","MERCHANT_LOCKED","SINGLE_USE"],"description":"Card types:\n* `VIRTUAL` - Card will authorize at any merchant and can be added to a digital wallet like Apple Pay or Google Pay (if the card program is digital wallet-enabled).\n* `PHYSICAL` - Manufactured and sent to the cardholder. We offer white label branding, credit, ATM, PIN debit, chip/EMV, NFC and magstripe functionality. Reach out at [acme.com/contact](https://acme.com/contact) for more information.\n* `SINGLE_USE` - Card is closed upon first successful authorization.\n* `MERCHANT_LOCKED` - *[Deprecated]* Card is locked to the first merchant that successfully authorizes the card.\n"},"pin":{"type":"string","description":"Encrypted PIN block (in base64). Only applies to cards of type `PHYSICAL` and `VIRTUAL`. See [Encrypted PIN Block](https://docs.acme.com/docs/cards#encrypted-pin-block-enterprise)."},"digital_card_art_token":{"type":"string","format":"uuid","description":"Specifies the digital card art to be displayed in the user’s digital wallet after tokenization. This artwork must be approved by Mastercard and configured by Acme to use. See [Flexible Card Art Guide](https://docs.acme.com/docs/about-digital-wallets#flexible-card-art).","example":"00000000-0000-0000-1000-000000000000"},"product_id":{"type":"string","description":"Only applicable to cards of type `PHYSICAL`. This must be configured with Acme before use. Specifies the configuration (i.e., physical card art) that the card should be manufactured with.","example":"1"},"shipping_address":{"$ref":"#/components/schemas/ShippingAddress"},"shipping_method":{"type":"string","enum":["STANDARD","STANDARD_WITH_TRACKING","PRIORITY","EXPRESS","2_DAY","EXPEDITED"],"description":"Shipping method for the card. Only applies to cards of type PHYSICAL. Use of options besides `STANDARD` require additional permissions.\n* `STANDARD` - USPS regular mail or similar international option, with no tracking\n* `STANDARD_WITH_TRACKING` - USPS regular mail or similar international option, with tracking\n* `PRIORITY` - USPS Priority, 1-3 day shipping, with tracking\n* `EXPRESS` - FedEx Express, 3-day shipping, with tracking\n* `2_DAY` - FedEx 2-day shipping, with tracking\n* `EXPEDITED` - FedEx Standard Overnight or similar international option, with tracking\n"},"carrier":{"$ref":"#/components/schemas/Carrier"}}},"examples":{"createCard":{"summary":"Create card","value":{"memo":"New Card","spend_limit":1000,"spend_limit_duration":"TRANSACTION","state":"OPEN","type":"VIRTUAL"}},"createPhysicalCard":{"summary":"Create a physical card","value":{"type":"PHYSICAL","memo":"New physical card","state":"OPEN","shipping_address":{"first_name":"Johnny","last_name":"Appleseed","address1":"123","city":"NEW YORK","state":"NY","postal_code":"10001","country":"USA"},"product_id":"783991122","carrier":{"qr_code_url":"https://acme.com/activate-card/1"}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Card"},"example":{"created":"2021-06-28T22:53:15Z","cvv":"776","exp_month":"06","exp_year":"2027","funding":{"account_name":"Sandbox","created":"2020-07-08T17:57:36Z","last_four":"5263","nickname":"","state":"ENABLED","token":"b0f0d91a-3697-46d8-85f3-20f0a585cbea","type":"DEPOSITORY_CHECKING"},"hostname":"","last_four":"4142","memo":"New Card","pan":"4111111289144142","spend_limit":1000,"spend_limit_duration":"TRANSACTION","state":"OPEN","token":"7ef7d65c-9023-4da3-b113-3b8583fd7951","type":"VIRTUAL"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthorized"},"422":{"$ref":"#/components/responses/UnprocessableEntity"},"429":{"$ref":"#/components/responses/TooManyRequests"}},"x-codeSamples":[{"lang":"JavaScript","source":"import MeorphisTest4 from 'meorphis-test-4';\n\nconst meorphisTest4 = new MeorphisTest4();\n\nasync function main() {\n  const card = await meorphisTest4.cards.create({ type: 'VIRTUAL' });\n\n  console.log(card.token);\n}\n\nmain();"},{"lang":"Python","source":"from meorphis_test_4 import MeorphisTest4\n\nclient = MeorphisTest4()\ncard = client.cards.create(\n    type=\"VIRTUAL\",\n)\nprint(card.token)"}]}},"/cards/{card_token}":{"get":{"tags":["Card"],"summary":"Get card","description":"Get card configuration such as spend limit and state.","operationId":"getCardByToken","parameters":[{"$ref":"#/components/parameters/cardToken"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Card"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthorized"},"404":{"$ref":"#/components/responses/NotFound"},"422":{"$ref":"#/components/responses/UnprocessableEntity"},"429":{"$ref":"#/components/responses/TooManyRequests"}},"x-codeSamples":[{"lang":"JavaScript","source":"import MeorphisTest4 from 'meorphis-test-4';\n\nconst meorphisTest4 = new MeorphisTest4();\n\nasync function main() {\n  const card = await meorphisTest4.cards.retrieve('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');\n\n  console.log(card.token);\n}\n\nmain();"},{"lang":"Python","source":"from meorphis_test_4 import MeorphisTest4\n\nclient = MeorphisTest4()\ncard = client.cards.retrieve(\n    \"182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e\",\n)\nprint(card.token)"}]},"patch":{"tags":["Card"],"summary":"Update card","description":"Update the specified properties of the card. Unsupplied properties will remain unchanged. `pin` parameter only applies to physical cards.\n\n*Note: setting a card to a `CLOSED` state is a final action that cannot be undone.*\n","operationId":"patchCardByToken","parameters":[{"$ref":"#/components/parameters/cardToken"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"memo":{"type":"string","description":"Friendly name to identify the card. We recommend against using this field to store JSON data as it can cause unexpected behavior.","example":"New Card"},"spend_limit":{"type":"integer","description":"Amount (in cents) to limit approved authorizations. Transaction requests above the spend limit will be declined. Note that a spend limit of 0 is effectively no limit, and should only be used to reset or remove a prior limit. Only a limit of 1 or above will result in declined transactions due to checks against the card limit.","example":0},"spend_limit_duration":{"type":"string","enum":["ANNUALLY","FOREVER","MONTHLY","TRANSACTION"],"description":"Spend limit duration values:\n* `ANNUALLY` - Card will authorize transactions up to spend limit in a calendar year.\n* `FOREVER` - Card will authorize only up to spend limit for the entire lifetime of the card.\n* `MONTHLY` - Card will authorize transactions up to spend limit for the trailing month. Month is calculated as this calendar date one month prior.\n* `TRANSACTION` - Card will authorize multiple transactions if each individual transaction is under the spend limit.\n"},"auth_rule_token":{"type":"string","description":"Identifier for any Auth Rules that will be applied to transactions taking place with the card.\n"},"state":{"type":"string","enum":["CLOSED","OPEN","PAUSED"],"description":"Card state values:\n* `CLOSED` - Card will no longer approve authorizations. Closing a card cannot be undone.\n* `OPEN` - Card will approve authorizations (if they match card and account parameters).\n* `PAUSED` - Card will decline authorizations, but can be resumed at a later time.\n"},"pin":{"type":"string","description":"Encrypted PIN block (in base64). Only applies to cards of type `PHYSICAL` and `VIRTUAL`. See [Encrypted PIN Block](https://docs.acme.com/docs/cards#encrypted-pin-block-enterprise)."},"digital_card_art_token":{"type":"string","format":"uuid","description":"Specifies the digital card art to be displayed in the user’s digital wallet after tokenization. This artwork must be approved by Mastercard and configured by Acme to use. See [Flexible Card Art Guide](https://docs.acme.com/docs/about-digital-wallets#flexible-card-art).","example":"00000000-0000-0000-1000-000000000000"}}},"examples":{"updateCard":{"summary":"Update card","value":{"memo":"Updated Name","spend_limit":100,"spend_limit_duration":"FOREVER","state":"OPEN"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Card"},"example":{"created":"2021-06-28T22:53:15Z","cvv":"742","exp_month":"05","exp_year":"2027","funding":{"account_name":"Sandbox","created":"2020-07-08T17:57:36Z","last_four":"5263","nickname":"","state":"ENABLED","token":"b0f0d91a-3697-46d8-85f3-20f0a585cbea","type":"DEPOSITORY_CHECKING"},"hostname":"","last_four":"4938","memo":"Updated Name","pan":"4111111289144142","spend_limit":100,"spend_limit_duration":"FOREVER","state":"OPEN","token":"f5f905f5-8a8e-49bf-a9b4-c0adaa401456","type":"VIRTUAL"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthorized"},"404":{"$ref":"#/components/responses/NotFound"},"422":{"$ref":"#/components/responses/UnprocessableEntity"},"429":{"$ref":"#/components/responses/TooManyRequests"}},"x-codeSamples":[{"lang":"JavaScript","source":"import MeorphisTest4 from 'meorphis-test-4';\n\nconst meorphisTest4 = new MeorphisTest4();\n\nasync function main() {\n  const card = await meorphisTest4.cards.update('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');\n\n  console.log(card.token);\n}\n\nmain();"},{"lang":"Python","source":"from meorphis_test_4 import MeorphisTest4\n\nclient = MeorphisTest4()\ncard = client.cards.update(\n    \"182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e\",\n)\nprint(card.token)"}]}},"/cards/{card_token}/financial_transactions/{financial_transaction_token}":{"get":{"tags":["Card"],"summary":"Get card financial transaction","description":"Get the card financial transaction for the provided token.","operationId":"getCardFinancialTransactionByToken","parameters":[{"$ref":"#/components/parameters/cardToken"},{"$ref":"#/components/parameters/financialTransactionToken"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FinancialTransaction"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthorized"},"404":{"$ref":"#/components/responses/NotFound"},"422":{"$ref":"#/components/responses/UnprocessableEntity"},"429":{"$ref":"#/components/responses/TooManyRequests"}},"x-codeSamples":[{"lang":"JavaScript","source":"import MeorphisTest4 from 'meorphis-test-4';\n\nconst meorphisTest4 = new MeorphisTest4();\n\nasync function main() {\n  const financialtransaction = await meorphisTest4.cards.financialTransactions.retrieve(\n    '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',\n    '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',\n  );\n\n  console.log(financialtransaction.token);\n}\n\nmain();"},{"lang":"Python","source":"from meorphis_test_4 import MeorphisTest4\n\nclient = MeorphisTest4()\nfinancial_transaction = client.cards.financial_transactions.retrieve(\n    \"182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e\",\n    card_token=\"182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e\",\n)\nprint(financial_transaction.token)"}]}},"/cards/{card_token}/provision":{"post":{"tags":["Card"],"summary":"Provision card (Digital Wallet)","description":"Allow your cardholders to directly add payment cards to the device's digital wallet (e.g. Apple Pay) with one touch from your app.\n\nThis requires some additional setup and configuration. Please [Contact Us](https://acme.com/contact) or your Customer Success representative for more information.\n","operationId":"postCardProvision","parameters":[{"$ref":"#/components/parameters/cardTokenDigitalWallet"},{"$ref":"#/components/parameters/idempotencyKey"}],"requestBody":{"description":"Update request.","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"digital_wallet":{"type":"string","description":"Name of digital wallet provider.","enum":["APPLE_PAY","GOOGLE_PAY","SAMSUNG_PAY"]},"nonce":{"type":"string","format":"byte","description":"Only applicable if `digital_wallet` is `APPLE_PAY`. Omit to receive only `activationData` in the response. Base64 cryptographic nonce provided by the device's wallet."},"nonce_signature":{"type":"string","format":"byte","description":"Only applicable if `digital_wallet` is `APPLE_PAY`. Omit to receive only `activationData` in the response. Base64 cryptographic nonce provided by the device's wallet."},"certificate":{"type":"string","format":"byte","description":"Only applicable if `digital_wallet` is `APPLE_PAY`. Omit to receive only `activationData` in the response. Apple's public leaf certificate. Base64 encoded in PEM format with headers `(-----BEGIN CERTIFICATE-----)` and trailers omitted. Provided by the device's wallet."}}},"examples":{"provisionGoogleCard":{"summary":"Provision a card in Google Pay","value":{"digital_wallet":"GOOGLE_PAY"}}}}}},"responses":{"200":{"description":"Returns `provisioning_payload`, a cryptographic payload representing a payment card that can be passed to a device's digital wallet. Each digital wallet has a different API; consult the wallet's documentation for more info.\n","content":{"application/json":{"schema":{"type":"object","properties":{"provisioning_payload":{"type":"string"}}},"example":{"provisioning_payload":"eyJjYXJ......"}}}},"400":{"$ref":"#/components/responses/BadRequest"},"401":{"$ref":"#/components/responses/Unauthorized"},"404":{"$ref":"#/components/responses/NotFound"},"422":{"$ref":"#/components/responses/UnprocessableEntity"},"429":{"$ref":"#/components/responses/TooManyRequests"}},"x-codeSamples":[{"lang":"JavaScript","source":"import MeorphisTest4 from 'meorphis-test-4';\n\nconst meorphisTest4 = new MeorphisTest4();\n\nasync function main() {\n  const cardProvisionResponse = await meorphisTest4.cards.provision('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');\n\n  console.log(cardProvisionResponse.provisioning_payload);\n}\n\nmain();"},{"lang":"Python","source":"from meorphis_test_4 import MeorphisTest4\n\nclient = MeorphisTest4()\ncard = client.cards.provision(\n    \"182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e\",\n)\nprint(card.provisioning_payload)"}]}},"/status":{"get":{"tags":["Status"],"summary":"API status check","operationId":"getStatus","security":[{}],"responses":{"200":{"description":"Endpoint for users to check whether they can reach the api.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}}}}}}},"x-codeSamples":[{"lang":"JavaScript","source":"import MeorphisTest4 from 'meorphis-test-4';\n\nconst meorphisTest4 = new MeorphisTest4();\n\nasync function main() {\n  const statusRetrieveResponse = await meorphisTest4.status.retrieve();\n\n  console.log(statusRetrieveResponse.message);\n}\n\nmain();"},{"lang":"Python","source":"from meorphis_test_4 import MeorphisTest4\n\nclient = MeorphisTest4()\nstatus = client.status.retrieve()\nprint(status.message)"}]}}},"components":{"parameters":{"accountToken":{"in":"path","name":"account_token","required":true,"description":"Globally unique identifier for account.","schema":{"type":"string","format":"uuid"},"examples":{"accountTokenExample":{"value":"d86a0a4d-7459-471a-83b4-431136320828","summary":"A sample account token"}}},"accountHolderTokenPath":{"in":"path","name":"account_holder_token","required":true,"description":"Globally unique identifier for the account holder.","schema":{"type":"string","format":"uuid"},"examples":{"accountHolderTokenExample":{"value":"65db64b2-ae89-491a-97d9-f64788f8b2ab","summary":"A sample account holder token"}}},"authRuleToken":{"in":"path","name":"auth_rule_token","required":true,"schema":{"type":"string","format":"uuid"},"description":"Globally unique identifier for the Auth Rule.","examples":{"accountHolderTokenExample":{"value":"50ca12c3-ae11-513b-20e0-e55421f8b2ab","summary":"A sample authorization rule token"}}},"cardToken":{"in":"path","name":"card_token","required":true,"schema":{"type":"string","format":"uuid"},"examples":{"cardTokenExample":{"value":"73ca53a1-ae89-491a-97d9-f64788f8b2ab","summary":"A sample card token"}}},"cardTokenDigitalWallet":{"in":"path","name":"card_token","required":true,"schema":{"type":"string","format":"uuid"},"examples":{"cardTokenExample":{"value":"73ca53a1-ae89-491a-97d9-f64788f8b2ab","summary":"A sample card token"}},"description":"The unique token of the card to add to the device's digital wallet."},"cardProgramTokenPath":{"in":"path","name":"card_program_token","required":true,"description":"Globally unique identifier for the card program.","schema":{"type":"string","format":"uuid"},"examples":{"cardProgramTokenExample":{"value":"65db64b2-ae89-491a-97d9-f64788f8b2ab","summary":"A sample card program token"}}},"disputeToken":{"in":"path","name":"dispute_token","required":true,"schema":{"type":"string","format":"uuid"},"examples":{"disputeTokenExample":{"value":"73ca53a1-ae89-491a-97d9-f64788f8b2ab","summary":"A sample dispute token"}}},"disputeEvidenceToken":{"in":"path","name":"evidence_token","required":true,"schema":{"type":"string","format":"uuid"},"examples":{"disputeEvidenceExample":{"value":"73ca53a1-ae89-491a-97d9-f64788f8b2ab","summary":"A sample dispute evidence token"}}},"documentToken":{"in":"path","name":"document_token","required":true,"description":"Globally unique identifier for the document.","schema":{"type":"string","format":"uuid"},"examples":{"documentTokenExample":{"value":"76ca80c3-bf90-491a-97d9-f64788f8b2ab","summary":"A sample document token"}}},"eventToken":{"in":"path","name":"event_token","required":true,"schema":{"type":"string"}},"eventSubscriptionToken":{"in":"path","name":"event_subscription_token","required":true,"schema":{"type":"string"}},"financialAccountToken":{"in":"path","name":"financial_account_token","required":true,"description":"Globally unique identifier for financial account.","schema":{"type":"string","format":"uuid"},"examples":{"financialAccountTokenExample":{"value":"3fa85f64-5717-4562-b3fc-2c963f66afa6","summary":"A sample financial account token"}}},"statementToken":{"in":"path","name":"statement_token","required":true,"description":"Globally unique identifier for statements.","schema":{"type":"string"},"examples":{"statementTokenExample":{"value":"2UJf2y1JT6nsvDRH4rgSlfWs6sw","summary":"A sample statement token"}}},"financialTransactionToken":{"in":"path","name":"financial_transaction_token","required":true,"description":"Globally unique identifier for financial transaction token.","schema":{"type":"string","format":"uuid"},"examples":{"financialTransactionTokenExample":{"value":"18394f8e-711b-4b3e-ae21-d35a9eafe7d1","summary":"A sample financial transaction token"}}},"fundingSourceToken":{"in":"path","name":"funding_source_token","required":true,"schema":{"type":"string","format":"uuid"},"examples":{"fundingSourceTokenExample":{"value":"73ca53a1-bf91-502b-97d9-f64788f8b2ab","summary":"A sample funding source token"}}},"idempotencyKey":{"in":"header","name":"Idempotency-Key","schema":{"type":"string","maxLength":255},"description":"Idempotency key for the POST request. See [Idempotency Requests](https://docs.acme.com/docs/idempotent-requests) for details on behavior such as cache duration.\n"},"transactionToken":{"in":"path","name":"transaction_token","required":true,"schema":{"type":"string","format":"uuid"},"description":"Globally unique identifier for the transaction.","examples":{"transactionTokenExample":{"value":"84bc53a1-bf91-502b-97d9-f75888f8b2ab","summary":"A sample transaction token"}}},"beginDate":{"in":"query","name":"begin","description":"Date string in RFC 3339 format. Only entries created after the specified date will be included.","schema":{"type":"string","format":"date"}},"beginTime":{"in":"query","name":"begin","description":"Date string in RFC 3339 format. Only entries created after the specified time will be included. UTC time zone.","schema":{"type":"string","format":"date-time"}},"endDate":{"in":"query","name":"end","description":"Date string in RFC 3339 format. Only entries created before the specified date will be included.","schema":{"type":"string","format":"date"}},"endTime":{"in":"query","name":"end","description":"Date string in RFC 3339 format. Only entries created before the specified time will be included. UTC time zone.","schema":{"type":"string","format":"date-time"}},"pageSize":{"in":"query","name":"page_size","description":"Page size (for pagination).","schema":{"type":"integer","default":50,"minimum":1,"maximum":100}},"startingAfter":{"in":"query","name":"starting_after","required":false,"description":"A cursor representing an item's token after which a page of results should begin. Used to retrieve the next page of results after this item.","schema":{"type":"string"}},"endingBefore":{"in":"query","name":"ending_before","required":false,"description":"A cursor representing an item's token before which a page of results should end. Used to retrieve the previous page of results before this item.","schema":{"type":"string"}}},"responses":{"BadRequest":{"description":"A parameter in the query given in the request does not match the valid queries for the endpoint.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"Conflict":{"description":"The request could not be completed due to a conflict with the current state of the target resource.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"InternalServerError":{"description":"There was a processing error on the server-side.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"NotFound":{"description":"The specified resource was not found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"TooManyRequests":{"description":"Client has exceeded the number of allowed requests in a given time period.\n\n|   |   |\n|---|---|\n| Rate limited, too many requests per second | User has exceeded their per second rate limit |\n| Rate limited, reached daily limit | User has exceeded their daily rate limit |\n| Rate limited, too many keys tried | One IP has queried too many different API keys |\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"Forbidden":{"description":"Client is not authorized to call the endpoint\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"Unauthorized":{"description":"|   |   |\n|---|---|\n| User has not been authenticated | Invalid or missing API key |\n| API key is not active | The API key used is no longer active |\n| Could not find API key | The API key provided is not associated with any user |\n| Please provide API key in Authorization header | The Authorization header is not in the request |\n| Please provide API key in the form Authorization: [api-key] | The Authorization header is not formatted properly |\n| Insufficient privileges. Issuing API key required | Write access requires an Issuing API key. Reach out at [acme.com/contact](https://acme.com/contact) |\n| Insufficient privileges to create virtual cards. | Creating virtual cards requires an additional privilege | Reach out at [acme.com/contact](https://acme.com/contact) |\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"SimulateAuthorizationFailure":{"description":"Unprocessable Entity.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Error"},{"type":"object","properties":{"token":{"type":"string","format":"uuid","example":"b68ba424-ab69-4cbc-a946-30d90181b621","description":"A unique token to reference this transaction."}}}]}}}},"UnprocessableEntity":{"description":"Unprocessable entity.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"schemas":{"ThreeDSAddress":{"properties":{"address1":{"description":"First line of the street address provided by the cardholder.","type":"string","nullable":true},"address2":{"description":"Second line of the street address provided by the cardholder.","type":"string","nullable":true},"address3":{"description":"Third line of the street address provided by the cardholder.","type":"string","nullable":true},"city":{"description":"City of the address provided by the cardholder.","type":"string","nullable":true},"country":{"description":"Country of the address provided by the cardholder in ISO 3166-1 alpha-3 format (e.g. USA)","maxLength":3,"minLength":3,"type":"string","nullable":true},"postal_code":{"description":"Postal code (e.g., ZIP code) of the address provided by the cardholder","type":"string","nullable":true}},"type":"object"},"AccountConfiguration":{"type":"object","properties":{"spend_limit":{"type":"object","description":"Spend limit information for the user containing the daily, monthly, and lifetime spend limit of the account. Any charges to a card owned by this account will be declined once their transaction volume has surpassed the value in the applicable time limit (rolling). A lifetime limit of 0 indicates that the lifetime limit feature is disabled.\n","properties":{"daily":{"type":"integer","description":"Daily spend limit (in cents).","example":10000,"minimum":0},"monthly":{"type":"integer","description":"Monthly spend limit (in cents).","example":40000,"minimum":0},"lifetime":{"type":"integer","description":"Total spend limit over account lifetime (in cents).","example":100000,"minimum":0}},"required":["daily","monthly","lifetime"]},"state":{"type":"string","enum":["ACTIVE","PAUSED","CLOSED"],"description":"Account state:\n  * `ACTIVE` - Account is able to transact and create new cards.\n  * `PAUSED` - Account will not be able to transact or create new cards. It can be set back to `ACTIVE`.\n  * `CLOSED` - Account will permanently not be able to transact or create new cards.\n"},"token":{"type":"string","format":"uuid","description":"Globally unique identifier for the account. This is the same as the account_token returned by the enroll endpoint. If using this parameter, do not include pagination.\n","example":"b68b7424-aa69-4cbc-a946-30d90181b621"},"auth_rule_tokens":{"type":"array","items":{"type":"string"},"description":"List of identifiers for the Auth Rule(s) that are applied on the account.\n","example":["b68b7424-aa69-4cbc-a946-30d90181b621"]},"verification_address":{"type":"object","properties":{"address1":{"type":"string","description":"Valid deliverable address (no PO boxes).","example":"124 Old Forest Way"},"address2":{"type":"string","description":"Unit or apartment number (if applicable).","example":"Apt 21"},"city":{"type":"string","description":"City name.","example":"Seattle"},"state":{"type":"string","description":"Valid state code. Only USA state codes are currently supported, entered in uppercase ISO 3166-2 two-character format.","example":"WA"},"postal_code":{"type":"string","description":"Valid postal code. Only USA ZIP codes are currently supported, entered as a five-digit ZIP or nine-digit ZIP+4.","example":"98109"},"country":{"type":"string","description":"Country name. Only USA is currently supported.","example":"USA"}},"required":["address1","city","state","postal_code","country"]},"account_holder":{"type":"object","properties":{"token":{"type":"string","description":"Globally unique identifier for the account holder.","example":"95e5f1b7-cfd5-4520-aa3c-2451bab8608d"},"phone_number":{"type":"string","description":"Phone number of the individual.","example":"+12124007676"},"email":{"type":"string","description":"Email address.","example":"jack@acme.com"},"business_account_token":{"type":"string","description":"Only applicable for customers using the KYC-Exempt workflow to enroll authorized users of businesses. Account_token of the enrolled business associated with an enrolled AUTHORIZED_USER individual.","example":"e87db14a-4abf-4901-adad-5d5c9f46aff2"}},"required":["token","phone_number","email","business_account_token"]}},"required":["token","spend_limit","state"]},"AccountHolderDocument":{"type":"object","description":"Describes the document and the required document image uploads required to re-run KYC.","properties":{"account_holder_token":{"type":"string","format":"uuid","description":"Globally unique identifier for the account holder."},"document_type":{"type":"string","description":"Type of documentation to be submitted for verification.","enum":["commercial_license","drivers_license","passport","passport_card","visa"]},"required_document_uploads":{"type":"array","items":{"type":"object","description":"Represents a single image of the document to upload.","properties":{"image_type":{"type":"string","description":"Type of image to upload.","enum":["back","front"]},"status":{"type":"string","description":"Status of document image upload.","enum":["COMPLETED","FAILED","PENDING","UPLOADED"]},"status_reasons":{"type":"array","items":{"type":"string","description":"Reasons for document image upload status.","enum":["BACK_IMAGE_BLURRY","FILE_SIZE_TOO_LARGE","FRONT_IMAGE_BLURRY","FRONT_IMAGE_GLARE","INVALID_FILE_TYPE","UNKNOWN_ERROR"]}},"upload_url":{"type":"string","description":"URL to upload document image to.\n\nNote that the upload URLs expire after 7 days. If an upload URL expires, you can\nrefresh the URLs by retrieving the document upload from `GET /account_holders/{account_holder_token}/documents`.\n"}}}},"token":{"type":"string","format":"uuid","description":"Globally unique identifier for the document."}},"example":{"account_holder_token":"aab6ad9a-3630-4cd0-bbec-1a0fa5c7e149","document_type":"drivers_license","required_document_uploads":[{"image_type":"front","status":"PENDING","status_reasons":[],"upload_url":"https://acme-document-verification-uploads.com"},{"image_type":"back","status":"UPLOADED","status_reasons":[],"upload_url":null}],"token":"12345678-3630-4cd0-bbec-1a0fa5c7e149"}},"AccountHolder":{"type":"object","properties":{"token":{"type":"string","format":"uuid","description":"Globally unique identifier for the account holder."},"account_token":{"type":"string","format":"uuid","description":"Globally unique identifier for the account."},"business_account_token":{"type":"string","format":"uuid","description":"Only applicable for customers using the KYC-Exempt workflow to enroll authorized users of businesses. Pass the account_token of the enrolled business associated with the AUTHORIZED_USER in this field."},"created":{"type":"string","format":"date-time","description":"Timestamp of when the account holder was created."},"external_id":{"type":"string","format":"string","description":"Customer-provided token that indicates a relationship with an object outside of the Acme ecosystem."},"exemption_type":{"type":"string","enum":["AUTHORIZED_USER","PREPAID_CARD_USER"],"description":"The type of KYC exemption for a KYC-Exempt Account Holder."},"user_type":{"type":"string","enum":["BUSINESS","INDIVIDUAL"],"description":"The type of Account Holder. If the type is \"INDIVIDUAL\", the \"individual\" attribute will be present.\nIf the type is \"BUSINESS\" then the \"business_entity\", \"control_person\", \"beneficial_owner_individuals\", \"beneficial_owner_entities\",\n\"nature_of_business\", and \"website_url\" attributes will be present.\n"},"verification_application":{"description":"Information about the most recent identity verification attempt","$ref":"#/components/schemas/AccountHolderVerificationApplication"},"individual":{"description":"Only present when user_type == \"INDIVIDUAL\". Information about the individual for which the account is being opened and KYC is being run.","$ref":"#/components/schemas/AccountHolderIndividualResponse"},"business_entity":{"description":"Only present when user_type == \"BUSINESS\". Information about the business for which the account is being opened and KYB is being run.","$ref":"#/components/schemas/BusinessEntity"},"beneficial_owner_entities":{"type":"array","description":"Only present when user_type == \"BUSINESS\". List of all entities with >25% ownership in the company.\n","minItems":0,"items":{"$ref":"#/components/schemas/BusinessEntity"}},"beneficial_owner_individuals":{"type":"array","description":"Only present when user_type == \"BUSINESS\". List of all individuals with >25% ownership in the company.\n","minItems":0,"items":{"$ref":"#/components/schemas/AccountHolderIndividualResponse"}},"control_person":{"description":"Only present when user_type == \"BUSINESS\".\nAn individual with significant responsibility for managing the legal entity (e.g., a Chief Executive Officer, Chief Financial Officer, Chief Operating Officer,\nManaging Member, General Partner, President, Vice President, or Treasurer). This can be an executive, or someone who will have program-wide access\nto the cards that Acme will provide. In some cases, this individual could also be a beneficial owner listed above.\n","$ref":"#/components/schemas/AccountHolderIndividualResponse"},"nature_of_business":{"type":"string","format":"string","description":"Only present when user_type == \"BUSINESS\". User-submitted description of the business."},"website_url":{"type":"string","format":"string","description":"Only present when user_type == \"BUSINESS\". Business's primary website."},"email":{"type":"string","description":"<\n  Deprecated.\n  Use control_person.email when user_type == \"BUSINESS\".\n  Use individual.phone_number when user_type == \"INDIVIDUAL\".\n>\nPrimary email of Account Holder.\n","example":"+12124007676"},"phone_number":{"type":"string","description":"<\n  Deprecated.\n  Use control_person.phone_number when user_type == \"BUSINESS\".\n  Use individual.phone_number when user_type == \"INDIVIDUAL\".\n>\nPrimary phone of Account Holder, entered in E.164 format.\n","example":"+12124007676"},"status":{"type":"string","enum":["ACCEPTED","REJECTED","PENDING_RESUBMIT","PENDING_DOCUMENT"],"description":"<Deprecated. Use verification_application.status instead>\nKYC and KYB evaluation states.\nNote: `PENDING_RESUBMIT` and `PENDING_DOCUMENT` are only applicable for the `ADVANCED` workflow.\n"},"status_reasons":{"type":"array","description":"<Deprecated. Use verification_application.status_reasons> Reason for the evaluation status.","items":{"type":"string","enum":["ADDRESS_VERIFICATION_FAILURE","AGE_THRESHOLD_FAILURE","COMPLETE_VERIFICATION_FAILURE","DOB_VERIFICATION_FAILURE","ID_VERIFICATION_FAILURE","MAX_DOCUMENT_ATTEMPTS","MAX_RESUBMISSION_ATTEMPTS","NAME_VERIFICATION_FAILURE","OTHER_VERIFICATION_FAILURE","RISK_THRESHOLD_FAILURE","WATCHLIST_ALERT_FAILURE"]}}}},"AccountHolderVerificationApplication":{"type":"object","description":"Represents the status of an identity verification application for an account holder","properties":{"created":{"type":"string","format":"date-time","description":"Timestamp of when the application was created."},"updated":{"type":"string","format":"date-time","description":"Timestamp of when the application was last updated."},"status":{"type":"string","enum":["ACCEPTED","REJECTED","PENDING_RESUBMIT","PENDING_DOCUMENT"],"description":"KYC and KYB evaluation states.\nNote: `PENDING_RESUBMIT` and `PENDING_DOCUMENT` are only applicable for the `ADVANCED` workflow.\n"},"status_reasons":{"type":"array","description":"Reason for the evaluation status.","items":{"type":"string","enum":["ADDRESS_VERIFICATION_FAILURE","AGE_THRESHOLD_FAILURE","COMPLETE_VERIFICATION_FAILURE","DOB_VERIFICATION_FAILURE","ID_VERIFICATION_FAILURE","MAX_DOCUMENT_ATTEMPTS","MAX_RESUBMISSION_ATTEMPTS","NAME_VERIFICATION_FAILURE","OTHER_VERIFICATION_FAILURE","RISK_THRESHOLD_FAILURE","WATCHLIST_ALERT_FAILURE"]}}}},"AccountHolderIndividualResponse":{"type":"object","description":"Information about an individual associated with an account holder. A subset of the information provided via KYC. For example, we do not return the government id.","properties":{"address":{"description":"Individual's current address","$ref":"#/components/schemas/Address"},"dob":{"type":"string","description":"Individual's date of birth, as an RFC 3339 date.","example":"1991-03-08 08:00:00"},"email":{"type":"string","description":"Individual's email address.","example":"tom@middle-earth.com"},"first_name":{"type":"string","description":"Individual's first name, as it appears on government-issued identity documents.","example":"Tom"},"last_name":{"type":"string","description":"Individual's last name, as it appears on government-issued identity documents.","example":"Bombadil"},"phone_number":{"type":"string","description":"Individual's phone number, entered in E.164 format.","example":"+12124007676"}}},"AccountCreditConfigurationRequest":{"type":"object","properties":{"billing_period":{"type":"integer","description":"Number of days within the billing period"},"credit_limit":{"type":"integer","description":"Credit limit extended to the Business Account"},"external_bank_account_token":{"type":"string","format":"uuid","description":"The external bank account token to use for auto-collections"},"payment_period":{"type":"integer","description":"Number of days after the billing period ends that a payment is required"}}},"AccountHolderCollectionsConfiguration":{"type":"object","required":["billing_period","payment_period"],"properties":{"billing_period":{"type":"integer","description":"Number of days within the billing period"},"external_bank_account_token":{"type":"string","format":"uuid","description":"The external bank account token to use for auto-collections"},"payment_period":{"type":"integer","description":"Number of days after the billing period ends that a payment is required"}}},"BusinessAccount":{"type":"object","required":["token"],"properties":{"collections_configuration":{"$ref":"#/components/schemas/AccountHolderCollectionsConfiguration"},"credit_limit":{"type":"integer","description":"Credit limit extended to the Account"},"token":{"type":"string","format":"uuid","description":"Account token"}}},"AggregateBalance":{"type":"object","description":"Aggregate Balance across all end-user accounts","required":["financial_account_type","currency","available_amount","pending_amount","total_amount","created","updated","last_transaction_token","last_transaction_event_token","last_financial_account_token"],"properties":{"financial_account_type":{"type":"string","description":"Type of financial account","enum":["ISSUING","RESERVE"]},"currency":{"type":"string","description":"3-digit alphabetic ISO 4217 code for the local currency of the balance."},"available_amount":{"type":"integer","description":"Funds available for spend in the currency's smallest unit (e.g., cents for USD)"},"pending_amount":{"type":"integer","description":"Funds not available for spend due to card authorizations or pending ACH release. Shown in the currency's smallest unit (e.g., cents for USD)"},"total_amount":{"type":"integer","description":"The sum of available and pending balance in the currency's smallest unit (e.g., cents for USD)"},"created":{"type":"string","format":"date-time","description":"Date and time for when the balance was first created."},"updated":{"type":"string","format":"date-time","description":"Date and time for when the balance was last updated."},"last_transaction_token":{"type":"string","format":"uuid","description":"Globally unique identifier for the last transaction that impacted this balance"},"last_transaction_event_token":{"type":"string","format":"uuid","description":"Globally unique identifier for the last transaction event that impacted this balance"},"last_financial_account_token":{"type":"string","format":"uuid","description":"Globally unique identifier for the financial account that had its balance updated most recently"}}},"CardAggregateBalance":{"type":"object","description":"Card Aggregate Balance across all end-user accounts","required":["currency","available_amount","pending_amount","total_amount","created","updated","last_transaction_token","last_transaction_event_token","last_card_token"],"properties":{"currency":{"type":"string","description":"3-digit alphabetic ISO 4217 code for the local currency of the balance."},"available_amount":{"type":"integer","description":"Funds available for spend in the currency's smallest unit (e.g., cents for USD)"},"pending_amount":{"type":"integer","description":"Funds not available for spend due to card authorizations or pending ACH release. Shown in the currency's smallest unit (e.g., cents for USD)"},"total_amount":{"type":"integer","description":"The sum of available and pending balance in the currency's smallest unit (e.g., cents for USD)"},"created":{"type":"string","format":"date-time","description":"Date and time for when the balance was first created."},"updated":{"type":"string","format":"date-time","description":"Date and time for when the balance was last updated."},"last_transaction_token":{"type":"string","format":"uuid","description":"Globally unique identifier for the last transaction that impacted this balance"},"last_transaction_event_token":{"type":"string","format":"uuid","description":"Globally unique identifier for the last transaction event that impacted this balance"},"last_card_token":{"type":"string","format":"uuid","description":"Globally unique identifier for the card that had its balance updated most recently"}}},"Balance":{"type":"object","description":"Balance of a Financial Account","required":["available_amount","created","currency","last_transaction_event_token","last_transaction_token","pending_amount","token","total_amount","type","updated"],"properties":{"available_amount":{"type":"integer","description":"Funds available for spend in the currency's smallest unit (e.g., cents for USD)"},"created":{"type":"string","format":"date-time","description":"Date and time for when the balance was first created."},"currency":{"type":"string","description":"3-digit alphabetic ISO 4217 code for the local currency of the balance."},"last_transaction_event_token":{"type":"string","format":"uuid","description":"Globally unique identifier for the last financial transaction event that impacted this balance."},"last_transaction_token":{"type":"string","format":"uuid","description":"Globally unique identifier for the last financial transaction that impacted this balance."},"pending_amount":{"type":"integer","description":"Funds not available for spend due to card authorizations or pending ACH release. Shown in the currency's smallest unit (e.g., cents for USD)."},"token":{"type":"string","format":"uuid","description":"Globally unique identifier for the financial account that holds this balance.","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"total_amount":{"type":"integer","description":"The sum of available and pending balance in the currency's smallest unit (e.g., cents for USD)."},"type":{"type":"string","description":"Type of financial account.","enum":["ISSUING","RESERVE"]},"updated":{"type":"string","format":"date-time","description":"Date and time for when the balance was last updated."}}},"CardholderAuthentication":{"type":"object","nullable":true,"properties":{"3ds_version":{"type":"string","nullable":true,"description":"3-D Secure Protocol version. Possible enum values:\n* `1`: 3-D Secure Protocol version 1.x applied to the transaction.\n* `2`: 3-D Secure Protocol version 2.x applied to the transaction.\n* `null`: 3-D Secure was not used for the transaction\n","example":"2"},"acquirer_exemption":{"type":"string","enum":["AUTHENTICATION_OUTAGE_EXCEPTION","LOW_VALUE","MERCHANT_INITIATED_TRANSACTION","NONE","RECURRING_PAYMENT","SECURE_CORPORATE_PAYMENT","STRONG_CUSTOMER_AUTHENTICATION_DELEGATION","TRANSACTION_RISK_ANALYSIS"],"description":"Exemption applied by the ACS to authenticate the transaction without requesting a challenge. Possible enum values:\n* `AUTHENTICATION_OUTAGE_EXCEPTION`: Authentication Outage Exception exemption.\n* `LOW_VALUE`: Low Value Payment exemption.\n* `MERCHANT_INITIATED_TRANSACTION`: Merchant Initiated Transaction (3RI).\n* `NONE`: No exemption applied.\n* `RECURRING_PAYMENT`: Recurring Payment exemption.\n* `SECURE_CORPORATE_PAYMENT`: Secure Corporate Payment exemption.\n* `STRONG_CUSTOMER_AUTHENTICATION_DELEGATION`: Strong Customer Authentication Delegation exemption.\n* `TRANSACTION_RISK_ANALYSIS`: Acquirer Low-Fraud and Transaction Risk Analysis exemption.\n\nMaps to the 3-D Secure `transChallengeExemption` field.\n","example":"NONE"},"authentication_result":{"type":"string","enum":["SUCCESS","DECLINE","ATTEMPTS","NONE"],"description":"Outcome of the 3DS authentication process. Possible enum values:\n* `SUCCESS`: 3DS authentication was successful and the transaction is considered authenticated.\n* `DECLINE`: 3DS authentication was attempted but was unsuccessful — i.e., the issuer declined to authenticate the cardholder; note that Acme populates this value on a best-effort basis based on common data across the 3DS authentication and ASA data elements.\n* `ATTEMPTS`: 3DS authentication was attempted but full authentication did not occur. A proof of attempted authenticated is provided by the merchant.\n* `NONE`: 3DS authentication was not performed on the transaction.\n","example":"SUCCESS"},"decision_made_by":{"type":"string","enum":["NETWORK","ACME_DEFAULT","ACME_RULES","CUSTOMER_ENDPOINT","UNKNOWN"],"description":"Indicator for which party made the 3DS authentication decision. Possible enum values:\n* `NETWORK`: A networks tand-in service decided on the outcome; for token authentications (as indicated in the `liability_shift` attribute), this is the default value\n* `ACME_DEFAULT`: A default decision was made by Acme, without running a rules-based authentication; this value will be set on card programs that do not participate in one of our two 3DS product tiers\n* `ACME_RULES`: A rules-based authentication was conducted by Acme and Acme decided on the outcome\n* `CUSTOMER_ENDPOINT`: Acme customer decided on the outcome based on a real-time request sent to a configured endpoint\n* `UNKNOWN`: Data on which party decided is unavailable\n","example":"ACME_RULES"},"liability_shift":{"type":"string","enum":["3DS_AUTHENTICATED","ACQUIRER_EXEMPTION","NONE","TOKEN_AUTHENTICATED"],"description":"Indicates whether chargeback liability shift applies to the transaction. Possible enum values:\n* `3DS_AUTHENTICATED`: The transaction was fully authenticated through a 3-D Secure flow, chargeback liability shift applies.\n* `ACQUIRER_EXEMPTION`: The acquirer utilised an exemption to bypass Strong Customer Authentication (`transStatus = N`, or `transStatus = I`). Liability remains with the acquirer and in this case the `acquirer_exemption` field is expected to be not `NONE`.\n* `NONE`: Chargeback liability shift has not shifted to the issuer, i.e. the merchant is liable.\n* `TOKEN_AUTHENTICATED`: The transaction was a tokenized payment with validated cryptography, possibly recurring. Chargeback liability shift to the issuer applies.\n"},"verification_attempted":{"type":"string","enum":["APP_LOGIN","BIOMETRIC","NONE","OTHER","OTP"],"description":"Verification attempted values:\n* `APP_LOGIN`: Out-of-band login verification was attempted by the ACS.\n* `BIOMETRIC`: Out-of-band biometric verification was attempted by the ACS.\n* `NONE`: No cardholder verification was attempted by the Access Control Server (e.g. frictionless 3-D Secure flow, no 3-D Secure, or stand-in Risk Based Analysis).\n* `OTHER`: Other method was used by the ACS to verify the cardholder (e.g. Mastercard Identity Check Express, recurring transactions, etc.)\n* `OTP`: One-time password verification was attempted by the ACS.\n","example":"NONE"},"verification_result":{"type":"string","enum":["CANCELLED","FAILED","FRICTIONLESS","NOT_ATTEMPTED","REJECTED","SUCCESS"],"description":"This field partially maps to the `transStatus` field in the [EMVCo 3-D Secure specification](https://www.emvco.com/emv-technologies/3d-secure/) and Mastercard SPA2 AAV leading indicators.\n\nVerification result values:\n* `CANCELLED`: Authentication/Account verification could not be performed, `transStatus = U`.\n* `FAILED`: Transaction was not authenticated. `transStatus = N`, note: the utilization of exemptions could also result in `transStatus = N`, inspect the `acquirer_exemption` field for more information.\n* `FRICTIONLESS`: Attempts processing performed, the transaction was not authenticated, but a proof of attempted authentication/verification is provided. `transStatus = A` and the leading AAV indicator was one of {`kE`, `kF`, `kQ`}.\n* `NOT_ATTEMPTED`: A 3-D Secure flow was not applied to this transaction. Leading AAV indicator was one of {`kN`, `kX`} or no AAV was provided for the transaction.\n* `REJECTED`: Authentication/Account Verification rejected; `transStatus = R`. Issuer is rejecting authentication/verification and requests that authorization not be attempted.\n* `SUCCESS`: Authentication verification successful. `transStatus = Y` and leading AAV indicator for the transaction was one of {`kA`, `kB`, `kC`, `kD`, `kO`, `kP`, `kR`, `kS`}.\n\nNote that the following `transStatus` values are not represented by this field:\n* `C`: Challenge Required\n* `D`: Challenge Required; decoupled authentication confirmed\n* `I`: Informational only\n* `S`: Challenge using Secure Payment Confirmation (SPC)\n","example":"FRICTIONLESS"},"three_ds_authentication_token":{"type":"string","format":"uuid","description":"Unique identifier you can use to match a given 3DS authentication and the transaction. Note that in cases where liability shift does not occur, this token is matched to the transaction on a best-effort basis.","example":"a6e372d0-b40a-43eb-b0d1-4e1aebef5875"}},"required":["3ds_version","acquirer_exemption","authentication_result","decision_made_by","liability_shift","three_ds_authentication_token","verification_attempted","verification_result"]},"settlementSummaryDetails":{"type":"object","nullable":true,"properties":{"network":{"type":"string","nullable":false,"enum":["MASTERCARD","VISA","INTERLINK","MAESTRO","UNKNOWN"],"description":"Card network where the transaction took place","example":"MASTERCARD"},"institution":{"type":"string","description":"The most granular ID the network settles with (e.g., ICA for Mastercard, FTSRE for Visa).","example":"00001"},"settled_net_amount":{"type":"integer","description":"The total net amount of cash moved. (net value of settled_gross_amount, interchange, fees).","example":1893},"transactions_gross_amount":{"type":"integer","description":"The total amount of settlement impacting transactions (excluding interchange, fees, and disputes).","example":1900},"interchange_gross_amount":{"type":"integer","description":"The total amount of interchange.","example":-7},"disputes_gross_amount":{"type":"integer","description":"The total gross amount of disputes settlements.","example":0},"other_fees_gross_amount":{"type":"integer","description":"Total amount of gross other fees outside of interchange.","example":0}}},"Dispute":{"type":"object","description":"Dispute.","required":["amount","arbitration_date","created","customer_filed_date","customer_note","network_claim_ids","network_filed_date","network_reason_code","prearbitration_date","primary_claim_id","reason","representment_date","resolution_amount","resolution_date","resolution_note","resolution_reason","status","token","transaction_token"],"properties":{"amount":{"type":"integer","description":"Amount under dispute. May be different from the original transaction amount."},"arbitration_date":{"type":"string","format":"date-time","nullable":true,"description":"Date dispute entered arbitration."},"created":{"type":"string","format":"date-time","description":"Timestamp of when first Dispute was reported."},"customer_filed_date":{"type":"string","format":"date-time","nullable":true,"description":"Date that the dispute was filed by the customer making the dispute."},"customer_note":{"type":"string","nullable":true,"description":"End customer description of the reason for the dispute.","maxLength":10000},"network_claim_ids":{"type":"array","items":{"type":"string"},"nullable":true,"description":"Unique identifiers for the dispute from the network."},"primary_claim_id":{"type":"string","nullable":true,"description":"Unique identifier for the dispute from the network. If there are multiple, this will be the first claim id set by the network"},"network_filed_date":{"type":"string","format":"date-time","nullable":true,"description":"Date that the dispute was submitted to the network."},"network_reason_code":{"type":"string","nullable":true,"description":"Network reason code used to file the dispute."},"prearbitration_date":{"type":"string","nullable":true,"format":"date-time","description":"Date dispute entered pre-arbitration."},"reason":{"type":"string","enum":["ATM_CASH_MISDISPENSE","CANCELLED","DUPLICATED","FRAUD_CARD_NOT_PRESENT","FRAUD_CARD_PRESENT","FRAUD_OTHER","GOODS_SERVICES_NOT_AS_DESCRIBED","GOODS_SERVICES_NOT_RECEIVED","INCORRECT_AMOUNT","MISSING_AUTH","OTHER","PROCESSING_ERROR","REFUND_NOT_PROCESSED","RECURRING_TRANSACTION_NOT_CANCELLED"],"description":"Dispute reason:\n* `ATM_CASH_MISDISPENSE`: ATM cash misdispense.\n* `CANCELLED`: Transaction was cancelled by the customer.\n* `DUPLICATED`: The transaction was a duplicate.\n* `FRAUD_CARD_NOT_PRESENT`: Fraudulent transaction, card not present.\n* `FRAUD_CARD_PRESENT`: Fraudulent transaction, card present.\n* `FRAUD_OTHER`: Fraudulent transaction, other types such as questionable merchant activity.\n* `GOODS_SERVICES_NOT_AS_DESCRIBED`: The goods or services were not as described.\n* `GOODS_SERVICES_NOT_RECEIVED`: The goods or services were not received.\n* `INCORRECT_AMOUNT`: The transaction amount was incorrect.\n* `MISSING_AUTH`: The transaction was missing authorization.\n* `OTHER`: Other reason.\n* `PROCESSING_ERROR`: Processing error.\n* `REFUND_NOT_PROCESSED`: The refund was not processed.\n* `RECURRING_TRANSACTION_NOT_CANCELLED`: The recurring transaction was not cancelled.\n"},"representment_date":{"type":"string","format":"date-time","nullable":true,"description":"Date the representment was received."},"resolution_amount":{"type":"integer","nullable":true,"description":"Resolution amount net of network fees."},"resolution_date":{"type":"string","format":"date-time","nullable":true,"description":"Date that the dispute was resolved."},"resolution_note":{"type":"string","nullable":true,"description":"Note by Dispute team on the case resolution.","maxLength":10000},"resolution_reason":{"type":"string","nullable":true,"enum":["CASE_LOST","NETWORK_REJECTED","NO_DISPUTE_RIGHTS_3DS","NO_DISPUTE_RIGHTS_BELOW_THRESHOLD","NO_DISPUTE_RIGHTS_CONTACTLESS","NO_DISPUTE_RIGHTS_HYBRID","NO_DISPUTE_RIGHTS_MAX_CHARGEBACKS","NO_DISPUTE_RIGHTS_OTHER","PAST_FILING_DATE","PREARBITRATION_REJECTED","PROCESSOR_REJECTED_OTHER","REFUNDED","REFUNDED_AFTER_CHARGEBACK","WITHDRAWN","WON_ARBITRATION","WON_FIRST_CHARGEBACK","WON_PREARBITRATION"],"description":"Reason for the dispute resolution:\n* `CASE_LOST`: This case was lost at final arbitration.\n* `NETWORK_REJECTED`: Network rejected.\n* `NO_DISPUTE_RIGHTS_3DS`: No dispute rights, 3DS.\n* `NO_DISPUTE_RIGHTS_BELOW_THRESHOLD`: No dispute rights, below threshold.\n* `NO_DISPUTE_RIGHTS_CONTACTLESS`: No dispute rights, contactless.\n* `NO_DISPUTE_RIGHTS_HYBRID`: No dispute rights, hybrid.\n* `NO_DISPUTE_RIGHTS_MAX_CHARGEBACKS`: No dispute rights, max chargebacks.\n* `NO_DISPUTE_RIGHTS_OTHER`: No dispute rights, other.\n* `PAST_FILING_DATE`: Past filing date.\n* `PREARBITRATION_REJECTED`: Prearbitration rejected.\n* `PROCESSOR_REJECTED_OTHER`: Processor rejected, other.\n* `REFUNDED`: Refunded.\n* `REFUNDED_AFTER_CHARGEBACK`: Refunded after chargeback.\n* `WITHDRAWN`: Withdrawn.\n* `WON_ARBITRATION`: Won arbitration.\n* `WON_FIRST_CHARGEBACK`: Won first chargeback.\n* `WON_PREARBITRATION`: Won prearbitration.\n"},"status":{"type":"string","enum":["NEW","PENDING_CUSTOMER","SUBMITTED","REPRESENTMENT","PREARBITRATION","ARBITRATION","CASE_WON","CASE_CLOSED"],"description":"Status types:\n* `NEW` - New dispute case is opened.\n* `PENDING_CUSTOMER` - Acme is waiting for customer to provide more information.\n* `SUBMITTED` - Dispute is submitted to the card network.\n* `REPRESENTMENT` - Case has entered second presentment.\n* `PREARBITRATION` - Case has entered prearbitration.\n* `ARBITRATION` - Case has entered arbitration.\n* `CASE_WON` - Case was won and credit will be issued.\n* `CASE_CLOSED` - Case was lost or withdrawn.\n"},"token":{"type":"string","format":"uuid","description":"Globally unique identifier."},"transaction_token":{"type":"string","format":"uuid","description":"The transaction that is being disputed. A transaction can only be disputed once but may have multiple dispute cases."}}},"DisputeEvidence":{"type":"object","description":"Dispute evidence.","required":["created","dispute_token","token","upload_status"],"properties":{"created":{"type":"string","format":"date-time","description":"Timestamp of when dispute evidence was created."},"dispute_token":{"type":"string","format":"uuid","description":"Dispute token evidence is attached to."},"download_url":{"type":"string","description":"URL to download evidence. Only shown when `upload_status` is `UPLOADED`."},"filename":{"type":"string","description":"File name of evidence. Recommended to give the dispute evidence a human-readable identifier."},"token":{"type":"string","format":"uuid","description":"Globally unique identifier."},"upload_status":{"type":"string","enum":["DELETED","ERROR","PENDING","REJECTED","UPLOADED"],"description":"Upload status types:\n* `DELETED` - Evidence was deleted.\n* `ERROR` - Evidence upload failed.\n* `PENDING` - Evidence is pending upload.\n* `REJECTED` - Evidence was rejected.\n* `UPLOADED` - Evidence was uploaded.\n"},"upload_url":{"type":"string","description":"URL to upload evidence. Only shown when `upload_status` is `PENDING`."}}},"Kyc":{"type":"object","properties":{"individual":{"description":"Information on individual for whom the account is being opened and KYC is being run.","$ref":"#/components/schemas/Individual"},"kyc_passed_timestamp":{"type":"string","description":"An RFC 3339 timestamp indicating when precomputed KYC was completed on the individual with a pass result.\n\nThis field is required only if workflow type is `KYC_BYO`.\n"},"tos_timestamp":{"type":"string","description":"An RFC 3339 timestamp indicating when the account holder accepted the applicable legal agreements (e.g., cardholder terms) as agreed upon during API customer's implementation with Acme."},"workflow":{"type":"string","description":"Specifies the type of KYC workflow to run.","enum":["KYC_ADVANCED","KYC_BASIC","KYC_BYO"]}},"required":["individual","tos_timestamp","workflow"]},"Kyb":{"type":"object","properties":{"business_entity":{"description":"Information for business for which the account is being opened and KYB is being run.","$ref":"#/components/schemas/BusinessEntity"},"beneficial_owner_entities":{"type":"array","description":"List of all entities with >25% ownership in the company. If no entity or individual owns >25% of the company, and the largest shareholder is an entity, please identify them in this field. See [FinCEN requirements](https://www.fincen.gov/sites/default/files/shared/CDD_Rev6.7_Sept_2017_Certificate.pdf) (Section I) for more background. If no business owner is an entity, pass in an empty list. However, either this parameter or `beneficial_owner_individuals` must be populated. on entities that should be included.\n","minItems":0,"items":{"$ref":"#/components/schemas/BusinessEntity"}},"beneficial_owner_individuals":{"type":"array","description":"List of all individuals with >25% ownership in the company. If no entity or individual owns >25% of the company,\nand the largest shareholder is an individual, please identify them in this field.\nSee [FinCEN requirements](https://www.fincen.gov/sites/default/files/shared/CDD_Rev6.7_Sept_2017_Certificate.pdf) (Section I) for more background on individuals that should be included. If no individual is an entity, pass in an empty list. However, either this parameter or `beneficial_owner_entities` must be populated.\n","minItems":0,"items":{"$ref":"#/components/schemas/Individual"}},"control_person":{"description":"An individual with significant responsibility for managing the legal entity (e.g., a Chief Executive Officer, Chief Financial Officer, Chief Operating Officer,\nManaging Member, General Partner, President, Vice President, or Treasurer). This can be an executive, or someone who will have program-wide access\nto the cards that Acme will provide. In some cases, this individual could also be a beneficial owner listed above.\nSee [FinCEN requirements](https://www.fincen.gov/sites/default/files/shared/CDD_Rev6.7_Sept_2017_Certificate.pdf) (Section II) for more background.\n","$ref":"#/components/schemas/Individual"},"kyb_passed_timestamp":{"type":"string","description":"An RFC 3339 timestamp indicating when precomputed KYC was completed on the business with a pass result.\n\nThis field is required only if workflow type is `KYB_BYO`.\n","example":"2022-03-08 08:00:00"},"nature_of_business":{"type":"string","description":"Short description of the company's line of business (i.e., what does the company do?).","example":"Software company selling solutions to the restaurant industry"},"tos_timestamp":{"type":"string","description":"An RFC 3339 timestamp indicating when the account holder accepted the applicable legal agreements (e.g., cardholder terms) as agreed upon during API customer's implementation with Acme.","example":"2022-03-08 08:00:00"},"website_url":{"type":"string","description":"Company website URL.","example":"www.mybusiness.com"},"workflow":{"type":"string","description":"Specifies the type of KYB workflow to run.","enum":["KYB_BASIC","KYB_BYO"]}},"required":["business_entity","beneficial_owner_entities","beneficial_owner_individuals","control_person","nature_of_business","tos_timestamp","workflow"]},"KycExempt":{"type":"object","properties":{"workflow":{"type":"string","description":"Specifies the workflow type. This must be 'KYC_EXEMPT'","enum":["KYC_EXEMPT"]},"kyc_exemption_type":{"type":"string","description":"Specifies the type of KYC Exempt user","enum":["AUTHORIZED_USER","PREPAID_CARD_USER"]},"first_name":{"type":"string","description":"The KYC Exempt user's first name"},"last_name":{"type":"string","description":"The KYC Exempt user's last name"},"email":{"type":"string","description":"The KYC Exempt user's email"},"phone_number":{"type":"string","description":"The KYC Exempt user's phone number"},"business_account_token":{"type":"string","description":"Only applicable for customers using the KYC-Exempt workflow to enroll authorized users of businesses. Pass the account_token of the enrolled business associated with the AUTHORIZED_USER in this field."},"address":{"description":"KYC Exempt user's current address - PO boxes, UPS drops, and FedEx drops are not acceptable; APO/FPO are acceptable. Only USA addresses are currently supported.\n","$ref":"#/components/schemas/Address"}},"required":["workflow","kyc_exemption_type","first_name","last_name","email","phone_number"]},"Address":{"type":"object","properties":{"address1":{"type":"string","description":"Valid deliverable address (no PO boxes).","example":"123 Old Forest Way"},"address2":{"type":"string","description":"Unit or apartment number (if applicable)."},"city":{"type":"string","description":"Name of city.","example":"Omaha"},"country":{"type":"string","description":"Valid country code. Only USA is currently supported, entered in uppercase ISO 3166-1 alpha-3 three-character format.\n","example":"USA"},"postal_code":{"type":"string","description":"Valid postal code. Only USA ZIP codes are currently supported, entered as a five-digit ZIP or nine-digit ZIP+4.\n","example":"68022"},"state":{"type":"string","description":"Valid state code. Only USA state codes are currently supported, entered in uppercase ISO 3166-2 two-character format.\n","example":"NE"}},"required":["address1","city","country","postal_code","state"]},"Individual":{"type":"object","properties":{"address":{"description":"Individual's current address - PO boxes, UPS drops, and FedEx drops are not acceptable; APO/FPO are acceptable. Only USA addresses are currently supported.\n","$ref":"#/components/schemas/Address"},"dob":{"type":"string","description":"Individual's date of birth, as an RFC 3339 date.","example":"1991-03-08 08:00:00"},"email":{"type":"string","description":"Individual's email address.\nIf utilizing Acme for chargeback processing, this customer email address may be used to communicate dispute status and resolution.\n","example":"tom@middle-earth.com"},"first_name":{"type":"string","description":"Individual's first name, as it appears on government-issued identity documents.","example":"Tom"},"government_id":{"type":"string","description":"Government-issued identification number (required for identity verification and compliance with banking regulations). Social Security Numbers (SSN) and Individual Taxpayer Identification Numbers (ITIN) are currently supported, entered as full nine-digits, with or without hyphens\n","example":"111-23-1412"},"last_name":{"type":"string","description":"Individual's last name, as it appears on government-issued identity documents.","example":"Bombadil"},"phone_number":{"type":"string","description":"Individual's phone number, entered in E.164 format.\n","example":"+12124007676"}},"required":["address","dob","email","first_name","government_id","last_name","phone_number"]},"BusinessEntity":{"type":"object","properties":{"address":{"description":"Business's physical address - PO boxes, UPS drops, and FedEx drops are not acceptable; APO/FPO are acceptable.\n","$ref":"#/components/schemas/Address"},"dba_business_name":{"type":"string","description":"Any name that the business operates under that is not its legal business name (if applicable)."},"government_id":{"type":"string","description":"Government-issued identification number. US Federal Employer Identification Numbers (EIN) are currently supported, entered as full nine-digits, with or without hyphens.\n","example":"114-123-1513"},"legal_business_name":{"type":"string","description":"Legal (formal) business name.","example":"Acme, Inc."},"parent_company":{"type":"string","description":"Parent company name (if applicable)."},"phone_numbers":{"type":"array","description":"One or more of the business's phone number(s), entered as a list in E.164 format.","minItems":1,"items":{"type":"string","description":"Business phone number, entered in E.164 format.","example":"+12124007676"}}},"required":["address","government_id","legal_business_name","phone_numbers"]},"ASAClientResponse":{"type":"object","description":"## Response Time\nThe request timeout is configurable per request, with a default of 5 seconds. Response before the timeout does not guarantee that the authorization will succeed.\n\n## AVS Matching\nAVS response is optional. If AVS is present and a response is not received, Acme will return AVS validated. If AVS attributes aren’t included in the authorization, any AVS response result will be ignored.\n\n## Returned Balances\nBALANCE_INQUIRY ASA messages require a settled and available amount to be returned. If no balance is returned, Acme will return $0 for both attributes.\n","required":["result","token","type"],"properties":{"result":{"type":"string","enum":["ACCOUNT_INACTIVE","AVS_INVALID","CARD_CLOSED","CARD_PAUSED","INSUFFICIENT_FUNDS","MALFORMED_RESPONSE","VELOCITY_EXCEEDED","UNAUTHORIZED_MERCHANT"],"description":"ASA response result. `APPROVED` to accept the authorization. Any other response will decline the authorization.\n\n|   |   |   |\n|---|---|---|\n| **Decline reason** | **Description** |\n| CARD_CLOSED | Card is permanently closed. Using `CARD_CLOSED` will result in subsequent authorizations being declined on the ASA client's behalf |\n| CARD_PAUSED | Card is not yet activated, or in a paused state |\n| ACCOUNT_INACTIVE | Same as `CARD_PAUSED`, will be deprecated in future versions |\n| AVS_INVALID | Prevent acquirers from approving the transaction despite incorrect AVS. Note: AVS response is not required for this decline type |\n| VELOCITY_EXCEEDED | Transaction exceeds issuer-set velocity limits. Acquirers may retry the transaction at a later date |\n| UNAUTHORIZED_MERCHANT | Can be used for restricted MCCs, countries, or transaction types (e.g. money transfer transactions) |\n| INSUFFICIENT_FUNDS | User has insufficient funds. Acquirers may retry the transaction at a later time |\n| MALFORMED_RESPONSE | The response to Acme's Auth Stream Access (ASA) request was malformed. |\n"},"avs_result":{"type":"string","enum":["FAIL","MATCH","MATCH_ADDRESS_ONLY","MATCH_ZIP_ONLY"],"description":"AVS response result."},"balance":{"type":"object","description":"Available amount and settled amount values. These values can be used by merchants for authorization decisions as well as balance display at POS/ATM.","properties":{"amount":{"type":"integer","description":"Settled amount (in cents).","example":100},"available":{"type":"integer","description":"Available amount (in cents).","example":200}}},"token":{"type":"string","format":"uuid","description":"The transaction token from the ASA request."}}},"AuthRule":{"allOf":[{"$ref":"#/components/schemas/AuthRuleResponseOnly"},{"$ref":"#/components/schemas/AuthRuleRequest"}]},"AuthRuleResponseOnly":{"type":"object","properties":{"token":{"type":"string","format":"uuid","description":"Globally unique identifier."},"state":{"enum":["ACTIVE","INACTIVE"],"type":"string","description":"Indicates whether the Auth Rule is ACTIVE or INACTIVE"}}},"AuthRuleRequest":{"type":"object","properties":{"allowed_mcc":{"type":"array","items":{"type":"string"},"description":"Merchant category codes for which the Auth Rule permits transactions.","example":["3000"]},"blocked_mcc":{"type":"array","items":{"type":"string"},"description":"Merchant category codes for which the Auth Rule automatically declines transactions.","example":["5811","5812"]},"allowed_countries":{"type":"array","items":{"type":"string"},"description":"Countries in which the Auth Rule permits transactions. Note that Acme maintains a list of countries in which all transactions are blocked; \"allowing\" those countries in an Auth Rule does not override the Acme-wide restrictions.\n","example":["MEX"]},"blocked_countries":{"type":"array","items":{"type":"string"},"description":"Countries in which the Auth Rule automatically declines transactions.","example":["USA","CAN"]},"account_tokens":{"type":"array","items":{"type":"string"},"description":"Array of account_token(s) identifying the accounts that the Auth Rule applies to. Note that only this field or `card_tokens` can be provided for a given Auth Rule.","example":["3fa85f64-5717-4562-b3fc-2c963f66afa6"]},"card_tokens":{"type":"array","items":{"type":"string"},"description":"Array of card_token(s) identifying the cards that the Auth Rule applies to. Note that only this field or `account_tokens` can be provided for a given Auth Rule.","example":["3fa85f64-5717-4562-b3fc-2c963f66afa6"]},"program_level":{"type":"boolean","description":"Boolean indicating whether the Auth Rule is applied at the program level.","example":false}}},"Card":{"type":"object","required":["created","funding","last_four","spend_limit","spend_limit_duration","state","token","type"],"properties":{"created":{"type":"string","format":"date-time","description":"An RFC 3339 timestamp for when the card was created. UTC time zone.","example":"2021-06-28T22:53:15Z"},"cvv":{"type":"string","minLength":3,"maxLength":3,"description":"Three digit cvv printed on the back of the card.","example":"776","x-acme-tag":"Enterprise"},"funding":{"$ref":"#/components/schemas/FundingAccount"},"exp_month":{"type":"string","description":"Two digit (MM) expiry month.","minLength":2,"maxLength":2,"example":"06","x-acme-tag":"Enterprise"},"exp_year":{"type":"string","description":"Four digit (yyyy) expiry year.","minLength":4,"maxLength":4,"example":"2027","x-acme-tag":"Enterprise"},"hostname":{"type":"string","description":"Hostname of card’s locked merchant (will be empty if not applicable)."},"last_four":{"type":"string","description":"Last four digits of the card number.","minLength":4,"maxLength":4},"memo":{"type":"string","description":"Friendly name to identify the card. We recommend against using this field to store JSON data as it can cause unexpected behavior.","example":"New Card"},"pan":{"type":"string","description":"Primary Account Number (PAN) (i.e. the card number). Customers must be PCI compliant to have PAN returned as a field in production. Please contact [support@acme.com](mailto:support@acme.com) for questions.\n","minLength":16,"maxLength":16,"example":"4111111289144142","x-acme-tag":"Enterprise"},"spend_limit":{"type":"integer","description":"Amount (in cents) to limit approved authorizations. Transaction requests above the spend limit will be declined.","example":1000},"spend_limit_duration":{"type":"string","enum":["ANNUALLY","FOREVER","MONTHLY","TRANSACTION"],"description":"Spend limit duration values:\n* `ANNUALLY` - Card will authorize transactions up to spend limit in a calendar year.\n* `FOREVER` - Card will authorize only up to spend limit for the entire lifetime of the card.\n* `MONTHLY` - Card will authorize transactions up to spend limit for the trailing month. Month is calculated as this calendar date one month prior.\n* `TRANSACTION` - Card will authorize multiple transactions if each individual transaction is under the spend limit.\n"},"state":{"type":"string","enum":["CLOSED","OPEN","PAUSED","PENDING_ACTIVATION","PENDING_FULFILLMENT"],"description":"Card state values:\n* `CLOSED` - Card will no longer approve authorizations. Closing a card cannot be undone.\n* `OPEN` - Card will approve authorizations (if they match card and account parameters).\n* `PAUSED` - Card will decline authorizations, but can be resumed at a later time.\n* `PENDING_FULFILLMENT` - The initial state for cards of type `PHYSICAL`. The card is provisioned pending manufacturing and fulfillment. Cards in this state can accept authorizations for e-commerce purchases, but not for \"Card Present\" purchases where the physical card itself is present.\n* `PENDING_ACTIVATION` - Each business day at 2pm Eastern Time Zone (ET), cards of type `PHYSICAL` in state `PENDING_FULFILLMENT` are sent to the card production warehouse and updated to state `PENDING_ACTIVATION` . Similar to `PENDING_FULFILLMENT`, cards in this state can be used for e-commerce transactions. API clients should update the card's state to `OPEN` only after the cardholder confirms receipt of the card.\n\nIn sandbox, the same daily batch fulfillment occurs, but no cards are actually manufactured.\n"},"auth_rule_tokens":{"type":"array","items":{"type":"string"},"description":"List of identifiers for the Auth Rule(s) that are applied on the card.\n","example":["b68b7424-aa69-4cbc-a946-30d90181b621"]},"token":{"type":"string","format":"uuid","description":"Globally unique identifier.","example":"7ef7d65c-9023-4da3-b113-3b8583fd7951"},"type":{"type":"string","enum":["VIRTUAL","PHYSICAL","MERCHANT_LOCKED","SINGLE_USE"],"description":"Card types:\n* `VIRTUAL` - Card will authorize at any merchant and can be added to a digital wallet like Apple Pay or Google Pay (if the card program is digital wallet-enabled).\n* `PHYSICAL` - Manufactured and sent to the cardholder. We offer white label branding, credit, ATM, PIN debit, chip/EMV, NFC and magstripe functionality. Reach out at [acme.com/contact](https://acme.com/contact) for more information.\n* `SINGLE_USE` - Card is closed upon first successful authorization.\n* `MERCHANT_LOCKED` - *[Deprecated]* Card is locked to the first merchant that successfully authorizes the card.\n"},"digital_card_art_token":{"type":"string","format":"uuid","description":"Specifies the digital card art to be displayed in the user’s digital wallet after tokenization. This artwork must be approved by Mastercard and configured by Acme to use. See [Flexible Card Art Guide](https://docs.acme.com/docs/about-digital-wallets#flexible-card-art).","example":"00000000-0000-0000-1000-000000000000"}}},"CardProgram":{"type":"object","properties":{"created":{"type":"string","format":"date-time","description":"Timestamp of when the card program was created."},"token":{"type":"string","format":"uuid","description":"Globally unique identifier."},"pan_range_start":{"type":"string","description":"The first digits of the card number that this card program starts with.","example":"52304803"},"pan_range_end":{"type":"string","description":"The first digits of the card number that this card program ends with.","example":"52304803"},"name":{"type":"string","description":"The name of the card program.","example":"My Prepaid Program"}}},"DigitalCardArt":{"type":"object","properties":{"token":{"type":"string","format":"uuid","description":"Globally unique identifier for the card art."},"card_program_token":{"type":"string","format":"uuid","description":"Globally unique identifier for the card program."},"is_enabled":{"type":"boolean","description":"Whether the card art is enabled."},"created":{"type":"string","format":"date-time","description":"Timestamp of when card art was created."},"network":{"type":"string","enum":["MASTERCARD","VISA"],"description":"Card network."},"description":{"type":"string","description":"Description of the card art."}}},"EmbedRequest":{"type":"object","properties":{"css":{"type":"string","description":"A publicly available URI, so the white-labeled card element can be styled with the client's branding."},"expiration":{"type":"string","format":"date-time","description":"An RFC 3339 timestamp for when the request should expire. UTC time zone.\n\nIf no timezone is specified, UTC will be used. If payload does not contain an expiration, the request will never expire.\n\nUsing an `expiration` reduces the risk of a [replay attack](https://en.wikipedia.org/wiki/Replay_attack). Without supplying the `expiration`, in the event that a malicious user gets a copy of your request in transit, they will be able to obtain the response data indefinitely.\n"},"token":{"type":"string","format":"uuid","description":"Globally unique identifier for the card to be displayed."},"target_origin":{"type":"string","description":"Required if you want to post the element clicked to the parent iframe.\n\nIf you supply this param, you can also capture click events in the parent iframe by adding an event listener.\n"}},"required":["token"]},"Error":{"type":"object","properties":{"message":{"type":"string","description":"Explanation of error response."},"debugging_request_id":{"type":"string","format":"uuid","description":"Identifier to help debug an error."}},"required":["message","debugging_request_id"]},"Event":{"type":"object","description":"A single event that affects the transaction state and lifecycle.","required":["token","event_type","payload","created"],"properties":{"token":{"type":"string","description":"Globally unique identifier.","example":"msg_1srOrx2ZWZBpBUvZwXKQmoEYga1"},"event_type":{"type":"string","enum":["account_holder.created","account_holder.updated","account_holder.verification","card.created","card.shipped","card_transaction.updated","digital_wallet.tokenization_approval_request","digital_wallet.tokenization_result","digital_wallet.tokenization_two_factor_authentication_code","dispute.updated","dispute_evidence.upload_failed","three_ds_authentication.created","payment_transaction.created","payment_transaction.updated","transfer_transaction.created"],"description":"Event types:\n* `account_holder.created` - Notification that a new account holder has been created and was not rejected.\n* `account_holder.updated` - Notification that an account holder was updated.\n* `account_holder.verification` - Notification than an account holder's identity verification is complete.\n* `card.created` - Notification that a card has been created.\n* `card.shipped` - Physical card shipment notification. See https://docs.acme.com/docs/cards#physical-card-shipped-webhook.\n* `card_transaction.updated` - Transaction Lifecycle webhook. See https://docs.acme.com/docs/transaction-webhooks.\n* `dispute.updated` - A dispute has been updated.\n* `digital_wallet.tokenization_approval_request` - Card network's request to Acme to activate a digital wallet token.\n* `digital_wallet.tokenization_result` - Notification of the end result of a tokenization, whether successful or failed.\n* `digital_wallet.tokenization_two_factor_authentication_code` - A code to be passed to an end user to complete digital wallet authentication. See https://docs.acme.com/docs/tokenization-control#digital-wallet-tokenization-auth-code.\n"},"payload":{"type":"object"},"created":{"type":"string","format":"date-time","description":"An RFC 3339 timestamp for when the event was created. UTC time zone.\n\nIf no timezone is specified, UTC will be used.\n"}}},"MessageAttempt":{"type":"object","description":"A subscription to specific event types.","required":["created","event_subscription_token","event_token","response","response_status_code","status","token","url"],"properties":{"created":{"type":"string","format":"date-time","description":"An RFC 3339 timestamp for when the event was created. UTC time zone.\n\nIf no timezone is specified, UTC will be used.\n"},"event_subscription_token":{"type":"string","description":"Globally unique identifier.","example":"ep_1srOrx2ZWZBpBUvZwXKQmoEYga1"},"event_token":{"type":"string","description":"Globally unique identifier.","example":"msg_1srOrx2ZWZBpBUvZwXKQmoEYga1"},"response":{"type":"string","description":"The response body from the event subscription's URL."},"response_status_code":{"type":"integer","description":"The response status code from the event subscription's URL."},"status":{"type":"string","enum":["FAILED","PENDING","SENDING","SUCCESS"],"description":"The status of the event attempt."},"url":{"type":"string","format":"uri"},"token":{"type":"string","description":"Globally unique identifier.","example":"atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2"}}},"EventSubscription":{"type":"object","description":"A subscription to specific event types.","required":["description","disabled","event_types","url","token"],"properties":{"description":{"type":"string","description":"A description of the subscription."},"disabled":{"type":"boolean","description":"Whether the subscription is disabled."},"event_types":{"type":"array","items":{"type":"string","enum":["account_holder.created","account_holder.updated","account_holder.verification","card.created","card.shipped","card_transaction.updated","digital_wallet.tokenization_approval_request","digital_wallet.tokenization_result","digital_wallet.tokenization_two_factor_authentication_code","dispute.updated","dispute_evidence.upload_failed","three_ds_authentication.created","payment_transaction.created","payment_transaction.updated","transfer_transaction.created"]}},"url":{"type":"string","format":"uri"},"token":{"type":"string","description":"Globally unique identifier.","example":"ep_1srOrx2ZWZBpBUvZwXKQmoEYga1"}}},"TransactionEvent":{"type":"object","description":"A single card transaction may include multiple events that affect the transaction state and lifecycle.","required":["amount","created","result","token","type"],"properties":{"amount":{"type":"integer","description":"Amount of the transaction event (in cents), including any acquirer fees.","example":1500},"created":{"type":"string","format":"date-time","description":"RFC 3339 date and time this event entered the system. UTC time zone.","example":"2023-09-26T21:14:28.637Z"},"result":{"type":"string","enum":["ACCOUNT_STATE_TRANSACTION","APPROVED","BANK_CONNECTION_ERROR","BANK_NOT_VERIFIED","CARD_CLOSED","CARD_PAUSED","FRAUD_ADVICE","GLOBAL_TRANSACTION_LIMIT","GLOBAL_WEEKLY_LIMIT","GLOBAL_MONTHLY_LIMIT","INACTIVE_ACCOUNT","INCORRECT_PIN","INVALID_CARD_DETAILS","INSUFFICIENT_FUNDS","MERCHANT_BLACKLIST","SINGLE_USE_RECHARGED","SWITCH_INOPERATIVE_ADVICE","UNAUTHORIZED_MERCHANT","UNKNOWN_HOST_TIMEOUT","USER_TRANSACTION_LIMIT"],"description":"`APPROVED` or decline reason.\n\nResult types:\n* `ACCOUNT_STATE_TRANSACTION_FAIL` - Contact [support@acme.com](mailto:support@acme.com).\n* `APPROVED` - Transaction is approved.\n* `BANK_CONNECTION_ERROR` - Please reconnect a funding source.\n* `BANK_NOT_VERIFIED` - Please confirm the funding source.\n* `CARD_CLOSED` - Card state was closed at the time of authorization.\n* `CARD_PAUSED` - Card state was paused at the time of authorization.\n* `FRAUD_ADVICE` - Transaction declined due to risk.\n* `GLOBAL_TRANSACTION_LIMIT` - Platform spend limit exceeded, contact [support@acme.com](mailto:support@acme.com).\n* `GLOBAL_WEEKLY_LIMIT` - Platform spend limit exceeded, contact [support@acme.com](mailto:support@acme.com).\n* `GLOBAL_MONTHLY_LIMIT` - Platform spend limit exceeded, contact [support@acme.com](mailto:support@acme.com).\n* `INACTIVE_ACCOUNT` - Account is inactive. Contact [support@acme.com](mailto:support@acme.com).\n* `INCORRECT_PIN` - PIN verification failed.\n* `INVALID_CARD_DETAILS` - Incorrect CVV or expiry date.\n* `INSUFFICIENT_FUNDS` - Please ensure the funding source is connected and up to date.\n* `MERCHANT_BLACKLIST` - This merchant is disallowed on the platform.\n* `SINGLE_USE_RECHARGED` - Single use card attempted multiple times.\n* `SWITCH_INOPERATIVE_ADVICE` - Network error, re-attempt the transaction.\n* `UNAUTHORIZED_MERCHANT` - Merchant locked card attempted at different merchant.\n* `UNKNOWN_HOST_TIMEOUT` - Network error, re-attempt the transaction.\n* `USER_TRANSACTION_LIMIT` - User-set spend limit exceeded.\n","example":"APPROVED"},"token":{"type":"string","format":"uuid","description":"Globally unique identifier.","example":"0c2adae9-f535-4505-8c35-421dad9bd0b6"},"type":{"type":"string","enum":["AUTHORIZATION","AUTHORIZATION_ADVICE","AUTHORIZATION_EXPIRY","AUTHORIZATION_REVERSAL","BALANCE_INQUIRY","CLEARING","CORRECTION_DEBIT","CORRECTION_CREDIT","CREDIT_AUTHORIZATION","CREDIT_AUTHORIZATION_ADVICE","FINANCIAL_AUTHORIZATION","FINANCIAL_CREDIT_AUTHORIZATION","RETURN","RETURN_REVERSAL","VOID"],"description":"Event types:\n* `AUTHORIZATION` - Authorize a transaction.\n* `AUTHORIZATION_ADVICE` - Advice on a transaction.\n* `AUTHORIZATION_EXPIRY` - Authorization has expired and reversed by Acme.\n* `AUTHORIZATION_REVERSAL` - Authorization was reversed by the merchant.\n* `BALANCE_INQUIRY` - A balance inquiry (typically a $0 authorization) has occurred on a card.\n* `CLEARING` - Transaction is settled.\n* `CORRECTION_DEBIT` - Manual transaction correction (Debit).\n* `CORRECTION_CREDIT` - Manual transaction correction (Credit).\n* `CREDIT_AUTHORIZATION` - A refund or credit authorization from a merchant.\n* `CREDIT_AUTHORIZATION_ADVICE` - A credit authorization was approved on your behalf by the network.\n* `FINANCIAL_AUTHORIZATION` -  A request from a merchant to debit funds without additional clearing.\n* `FINANCIAL_CREDIT_AUTHORIZATION` - A request from a merchant to refund or credit funds without additional clearing.\n* `RETURN` - A refund has been processed on the transaction.\n* `RETURN_REVERSAL` - A refund has been reversed (e.g., when a merchant reverses an incorrect refund).\n"}}},"FinancialAccount":{"type":"object","description":"Financial Account","required":["created","token","type","updated"],"properties":{"account_number":{"type":"string","description":"Account number for your Acme-assigned bank account number, if applicable."},"created":{"type":"string","format":"date-time","description":"Date and time for when the financial account was first created."},"routing_number":{"type":"string","description":"Routing number for your Acme-assigned bank account number, if applicable."},"token":{"type":"string","format":"uuid","description":"Globally unique identifier for the financial account.","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"type":{"type":"string","description":"Type of financial account","enum":["ISSUING","RESERVE"]},"updated":{"type":"string","format":"date-time","description":"Date and time for when the financial account was last updated."}}},"FinancialEventType":{"type":"string","enum":["ACH_INSUFFICIENT_FUNDS","ACH_ORIGINATION_PENDING","ACH_ORIGINATION_RELEASED","ACH_RECEIPT_PENDING","ACH_RECEIPT_RELEASED","ACH_RETURN","AUTHORIZATION","AUTHORIZATION_ADVICE","AUTHORIZATION_EXPIRY","AUTHORIZATION_REVERSAL","BALANCE_INQUIRY","CLEARING","CORRECTION_DEBIT","CORRECTION_CREDIT","CREDIT_AUTHORIZATION","CREDIT_AUTHORIZATION_ADVICE","FINANCIAL_AUTHORIZATION","FINANCIAL_CREDIT_AUTHORIZATION","RETURN","RETURN_REVERSAL","TRANSFER","TRANSFER_INSUFFICIENT_FUNDS"],"description":"Event types:\n* `ACH_INSUFFICIENT_FUNDS` - Attempted ACH origination declined due to insufficient balance.\n* `ACH_ORIGINATION_PENDING` - ACH origination pending release from an ACH hold.\n* `ACH_ORIGINATION_RELEASED` - ACH origination released from pending to available balance.\n* `ACH_RECEIPT_PENDING` - ACH receipt pending release from an ACH holder.\n* `ACH_RECEIPT_RELEASED` - ACH receipt released from pending to available balance.\n* `ACH_RETURN` - ACH origination returned by the Receiving Depository Financial Institution.\n* `AUTHORIZATION` - Authorize a card transaction.\n* `AUTHORIZATION_ADVICE` - Advice on a card transaction.\n* `AUTHORIZATION_EXPIRY` - Card Authorization has expired and reversed by Acme.\n* `AUTHORIZATION_REVERSAL` - Card Authorization was reversed by the merchant.\n* `BALANCE_INQUIRY` - A card balance inquiry (typically a $0 authorization) has occurred on a card.\n* `CLEARING` - Card Transaction is settled.\n* `CORRECTION_DEBIT` - Manual card transaction correction (Debit).\n* `CORRECTION_CREDIT` - Manual card transaction correction (Credit).\n* `CREDIT_AUTHORIZATION` - A refund or credit card authorization from a merchant.\n* `CREDIT_AUTHORIZATION_ADVICE` - A credit card authorization was approved on your behalf by the network.\n* `FINANCIAL_AUTHORIZATION` -  A request from a merchant to debit card funds without additional clearing.\n* `FINANCIAL_CREDIT_AUTHORIZATION` - A request from a merchant to refund or credit card funds without additional clearing.\n* `RETURN` - A card refund has been processed on the transaction.\n* `RETURN_REVERSAL` - A card refund has been reversed (e.g., when a merchant reverses an incorrect refund).\n* `TRANSFER` - Successful internal transfer of funds between financial accounts.\n* `TRANSFER_INSUFFICIENT_FUNDS` - Declined internl transfer of funds due to insufficient balance of the sender.\n"},"FinancialEvent":{"type":"object","properties":{"amount":{"type":"integer","description":"Amount of the financial event that has been settled in the currency's smallest unit (e.g., cents)."},"created":{"type":"string","format":"date-time","description":"Date and time when the financial event occurred. UTC time zone."},"result":{"type":"string","enum":["APPROVED","DECLINED"],"description":"APPROVED financial events were successful while DECLINED financial events were declined by user, Acme, or the network."},"token":{"type":"string","format":"uuid","description":"Globally unique identifier."},"type":{"$ref":"#/components/schemas/FinancialEventType"}}},"FinancialTransaction":{"type":"object","required":["category","created","currency","descriptor","events","pending_amount","result","settled_amount","status","token","updated"],"properties":{"category":{"type":"string","enum":["CARD","ACH","TRANSFER"],"description":"Status types:\n* `CARD` - Issuing card transaction.\n* `ACH` - Transaction over ACH.\n* `TRANSFER` - Internal transfer of funds between financial accounts in your program.\n"},"created":{"type":"string","format":"date-time","description":"Date and time when the financial transaction first occurred. UTC time zone."},"currency":{"type":"string","description":"3-digit alphabetic ISO 4217 code for the settling currency of the transaction."},"descriptor":{"type":"string","description":"A string that provides a description of the financial transaction; may be useful to display to users."},"events":{"type":"array","items":{"$ref":"#/components/schemas/FinancialEvent"},"description":"A list of all financial events that have modified this financial transaction."},"pending_amount":{"type":"integer","description":"Pending amount of the transaction in the currency's smallest unit (e.g., cents), including any acquirer fees.\nThe value of this field will go to zero over time once the financial transaction is settled.\n"},"result":{"type":"string","enum":["APPROVED","DECLINED"],"description":"APPROVED transactions were successful while DECLINED transactions were declined by user, Acme, or the network."},"settled_amount":{"type":"integer","description":"Amount of the transaction that has been settled in the currency's smallest unit (e.g., cents), including any acquirer fees. This may change over time."},"status":{"type":"string","enum":["DECLINED","EXPIRED","PENDING","SETTLED","VOIDED"],"description":"Status types:\n* `DECLINED` - The card transaction was declined.\n* `EXPIRED` - Acme reversed the card authorization as it has passed its expiration time.\n* `PENDING` - Authorization is pending completion from the merchant or pending release from ACH hold period\n* `SETTLED` - The financial transaction is completed.\n* `VOIDED` - The merchant has voided the previously pending card authorization.\n"},"token":{"type":"string","format":"uuid","description":"Globally unique identifier."},"updated":{"type":"string","format":"date-time","description":"Date and time when the financial transaction was last updated. UTC time zone."}}},"FundingAccount":{"type":"object","required":["created","last_four","state","token","type"],"properties":{"account_name":{"type":"string","description":"Account name identifying the funding source. This may be `null`."},"created":{"type":"string","format":"date-time","description":"An RFC 3339 string representing when this funding source was added to the Acme account. This may be `null`. UTC time zone."},"last_four":{"type":"string","description":"The last 4 digits of the account (e.g. bank account, debit card) associated with this FundingAccount. This may be null.","minLength":4,"maxLength":4},"nickname":{"type":"string","description":"The nickname given to the `FundingAccount` or `null` if it has no nickname.","minLength":1,"maxLength":255},"state":{"type":"string","enum":["ENABLED","PENDING","DELETED"],"description":"State of funding source.\n\nFunding source states:\n* `ENABLED` - The funding account is available to use for card creation and transactions.\n* `PENDING` - The funding account is still being verified e.g. bank micro-deposits verification.\n* `DELETED` - The founding account has been deleted.\n"},"token":{"type":"string","format":"uuid","description":"A globally unique identifier for this FundingAccount."},"type":{"type":"string","enum":["DEPOSITORY_CHECKING","DEPOSITORY_SAVINGS"],"description":"Types of funding source:\n* `DEPOSITORY_CHECKING` - Bank checking account.\n* `DEPOSITORY_SAVINGS` - Bank savings account.\n"}}},"Merchant":{"type":"object","properties":{"acceptor_id":{"type":"string","description":"Unique identifier to identify the payment card acceptor.","example":"333301802529120"},"city":{"type":"string","description":"City of card acceptor.","example":"NEW YORK","minLength":1,"maxLength":255},"country":{"type":"string","minLength":3,"maxLength":3,"description":"Uppercase country of card acceptor (see ISO 8583 specs).","example":"USA"},"descriptor":{"type":"string","description":"Short description of card acceptor.","minLength":1,"maxLength":25,"example":"COFFEE SHOP"},"mcc":{"type":"string","description":"Merchant category code (MCC). A four-digit number listed in ISO 18245. An MCC is used to classify a business by the types of goods or services it provides.\n","minLength":4,"maxLength":4,"example":"5812"},"state":{"type":"string","description":"Geographic state of card acceptor (see ISO 8583 specs).","minLength":2,"maxLength":2,"example":"NY"}}},"PointOfSale":{"type":"object","properties":{"terminal":{"type":"object","properties":{"attended":{"type":"boolean","description":"True if a clerk is present at the sale."},"card_retention_capable":{"type":"boolean","description":"Card retention capable."},"on_premise":{"type":"boolean","description":"True if the sale was made at the place of business (vs. mobile)."},"operator":{"type":"string","enum":["ADMINISTRATIVE","CARDHOLDER","CARD_ACCEPTOR"],"description":"The person that is designed to swipe the card."},"partial_approval_capable":{"type":"boolean","description":"True if the terminal is capable of partial approval. Partial approval is when part of a transaction is approved and another payment must be used for the remainder. Example scenario: A $40 transaction is attempted on a prepaid card with $25 balance. If partial approval is enabled, $25 can be authorized, at which point the POS will prompt the user for additional payment of $15.\n"},"pin_capability":{"type":"string","enum":["CAPABLE","INOPERATIVE","NOT_CAPABLE","UNSPECIFIED"],"description":"Status of whether the POS is able to accept PINs."},"type":{"type":"string","enum":["ATM","AUTHORIZATION","COUPON_MACHINE","DIAL_TERMINAL","ECOMMERCE","ECR","FUEL_MACHINE","HOME_TERMINAL","MICR","OFF_PREMISE","PAYMENT","PDA","PHONE","POS_TERMINAL","POINT","SELF_SERVICE","TELEVISION","TELLER","TRAVELERS_CHECK_MACHINE","VENDING","VOICE"],"description":"Point of Sales (POS) type."}}},"entry_mode":{"type":"object","properties":{"card":{"type":"string","enum":["NOT_PRESENT","PREAUTHORIZED","PRESENT"],"description":"Card status."},"cardholder":{"type":"string","enum":["DEFERRED_BILLING","INSTALLMENT","MAIL_ORDER","NOT_PRESENT","PREAUTHORIZED","PRESENT","REOCCURRING","TELEPHONE_ORDER"],"description":"Cardholder status."},"pan":{"type":"string","enum":["AUTO_ENTRY","BAR_CODE","CONTACTLESS","ECOMMERCE","ERROR_KEYED","ERROR_MAGNETIC_STRIPE","ICC","KEY_ENTERED","MAGNETIC_STRIPE","MANUAL","OCR","SECURE_CARDLESS","UNSPECIFIED"],"description":"Method of entry for the PAN."},"pin_entered":{"type":"boolean","description":"True if the PIN was entered."}}}}},"ShippingAddress":{"type":"object","required":["address1","city","country","first_name","last_name","state","postal_code"],"properties":{"first_name":{"type":"string","minLength":1,"maxLength":26,"description":"Customer's first name. This will be the first name printed on the physical card.","example":"Michael"},"last_name":{"type":"string","minLength":1,"maxLength":26,"description":"Customer's surname (family name). This will be the last name printed on the physical card.","example":"Bluth"},"line2_text":{"type":"string","minLength":0,"maxLength":26,"description":"Text to be printed on line two of the physical card. Use of this field requires additional permissions.","example":"The Bluth Company"},"address1":{"type":"string","minLength":1,"maxLength":40,"description":"Valid USPS routable address.","example":"5 Broad Street"},"address2":{"type":"string","minLength":1,"maxLength":40,"description":"Unit number (if applicable).","example":"Unit 25A"},"city":{"type":"string","description":"City","minLength":1,"maxLength":30,"example":"NEW YORK"},"state":{"type":"string","description":"Uppercase ISO 3166-2 two character abbreviation for US and CA. Optional with a limit of 24 characters for other countries.","minLength":0,"maxLength":24,"example":"NY"},"postal_code":{"type":"string","description":"Postal code (formerly zipcode). For US addresses, either five-digit zipcode or nine-digit \"ZIP+4\".","minLength":1,"maxLength":12,"example":"10001-1809"},"country":{"type":"string","description":"Uppercase ISO 3166-1 alpha-3 three character abbreviation.","minLength":3,"maxLength":3,"example":"USA"},"email":{"type":"string","description":"Email address to be contacted for expedited shipping process purposes. Required if `shipping_method` is `EXPEDITED`.","minLength":5,"maxLength":50,"example":"johnny@appleseed.com"},"phone_number":{"type":"string","description":"Cardholder's phone number in E.164 format to be contacted for expedited shipping process purposes. Required if `shipping_method` is `EXPEDITED`.","minLength":8,"maxLength":16,"example":"+12124007676"}}},"Carrier":{"type":"object","properties":{"qr_code_url":{"type":"string","description":"QR code url to display on the card carrier"}}},"Transfer":{"type":"object","properties":{"category":{"type":"string","enum":["TRANSFER"],"description":"Status types:\n* `TRANSFER` - Internal transfer of funds between financial accounts in your program.\n"},"created":{"type":"string","format":"date-time","description":"Date and time when the transfer occurred. UTC time zone."},"currency":{"type":"string","description":"3-digit alphabetic ISO 4217 code for the settling currency of the transaction."},"descriptor":{"type":"string","description":"A string that provides a description of the transfer; may be useful to display to users."},"events":{"type":"array","items":{"$ref":"#/components/schemas/FinancialEvent"},"description":"A list of all financial events that have modified this trasnfer."},"pending_amount":{"type":"integer","description":"Pending amount of the transaction in the currency's smallest unit (e.g., cents), including any acquirer fees.\nThe value of this field will go to zero over time once the financial transaction is settled.\n"},"result":{"type":"string","enum":["APPROVED","DECLINED"],"description":"APPROVED transactions were successful while DECLINED transactions were declined by user, Acme, or the network."},"settled_amount":{"type":"integer","description":"Amount of the transaction that has been settled in the currency's smallest unit (e.g., cents)."},"status":{"type":"string","enum":["DECLINED","EXPIRED","PENDING","SETTLED","VOIDED"],"description":"Status types:\n* `DECLINED` - The transfer was declined.\n* `EXPIRED` - The transfer was held in pending for too long and expired.\n* `PENDING` - The transfer is pending release from a hold.\n* `SETTLED` - The transfer is completed.\n* `VOIDED` - The transfer was reversed before it settled.\n"},"token":{"type":"string","format":"uuid","description":"Globally unique identifier for the transfer event."},"updated":{"type":"string","format":"date-time","description":"Date and time when the financial transaction was last updated. UTC time zone."},"from_balance":{"type":"array","items":{"$ref":"#/components/schemas/Balance"},"description":"The updated balance of the sending financial account."},"to_balance":{"type":"array","items":{"$ref":"#/components/schemas/Balance"},"description":"The updated balance of the receiving financial account."}}},"Transaction":{"type":"object","required":["acquirer_fee","acquirer_reference_number","amount","authorization_amount","authorization_code","card_token","created","events","merchant","merchant_amount","merchant_authorization_amount","merchant_currency","network","result","settled_amount","status","token"],"properties":{"acquirer_fee":{"type":"integer","description":"Fee assessed by the merchant and paid for by the cardholder in the smallest unit of the currency. Will be zero if no fee is assessed. Rebates may be transmitted as a negative value to indicate credited fees.","example":0},"acquirer_reference_number":{"type":"string","minLength":23,"maxLength":23,"nullable":true,"description":"Unique identifier assigned to a transaction by the acquirer that can be used in dispute and chargeback filing.\n","example":"12345678987654321234567"},"amount":{"type":"integer","description":"Authorization amount of the transaction (in cents), including any acquirer fees. This may change over time, and will represent the settled amount once the transaction is settled.","example":1500},"authorization_amount":{"type":"integer","description":"Authorization amount (in cents) of the transaction, including any acquirer fees. This amount always represents the amount authorized for the transaction, unaffected by settlement.","example":1500},"authorization_code":{"type":"string","minLength":6,"maxLength":6,"description":"A fixed-width 6-digit numeric identifier that can be used to identify a transaction with networks.","example":"123456"},"card_token":{"type":"string","format":"uuid","description":"Token for the card used in this transaction.","example":"19c22c47-7a75-43ee-9891-595419830f7e"},"cardholder_authentication":{"$ref":"#/components/schemas/CardholderAuthentication"},"created":{"type":"string","format":"date-time","description":"Date and time when the transaction first occurred. UTC time zone.","example":"2023-09-26T21:14:28.637Z"},"events":{"type":"array","items":{"$ref":"#/components/schemas/TransactionEvent"},"description":"A list of all events that have modified this transaction."},"merchant":{"$ref":"#/components/schemas/Merchant"},"merchant_amount":{"type":"integer","description":"Analogous to the \"amount\" property, but will represent the amount in the transaction's local currency (smallest unit), including any acquirer fees.","example":1500},"merchant_authorization_amount":{"type":"integer","description":"Analogous to the \"authorization_amount\" property, but will represent the amount in the transaction's local currency (smallest unit), including any acquirer fees.","example":1500},"merchant_currency":{"type":"string","description":"3-digit alphabetic ISO 4217 code for the local currency of the transaction.","example":"USD"},"network":{"type":"string","description":"Card network of the authorization. Can be `INTERLINK`, `MAESTRO`, `MASTERCARD`, `VISA`, or `UNKNOWN`. Value is `UNKNOWN` when Acme cannot determine the network code from the upstream provider.\n","enum":["INTERLINK","MAESTRO","MASTERCARD","VISA","UNKNOWN",null],"example":"MASTERCARD"},"result":{"type":"string","enum":["ACCOUNT_STATE_TRANSACTION","APPROVED","BANK_CONNECTION_ERROR","BANK_NOT_VERIFIED","CARD_CLOSED","CARD_PAUSED","FRAUD_ADVICE","GLOBAL_TRANSACTION_LIMIT","GLOBAL_WEEKLY_LIMIT","GLOBAL_MONTHLY_LIMIT","INACTIVE_ACCOUNT","INCORRECT_PIN","INVALID_CARD_DETAILS","INSUFFICIENT_FUNDS","MERCHANT_BLACKLIST","SINGLE_USE_RECHARGED","SWITCH_INOPERATIVE_ADVICE","UNAUTHORIZED_MERCHANT","UNKNOWN_HOST_TIMEOUT","USER_TRANSACTION_LIMIT"],"description":"`APPROVED` or decline reason. See Event result types\n","example":"APPROVED"},"settled_amount":{"type":"integer","description":"Amount of the transaction that has been settled (in cents), including any acquirer fees. This may change over time.","example":1500},"status":{"type":"string","enum":["BOUNCED","DECLINED","EXPIRED","PENDING","SETTLED","VOIDED"],"description":"Status types:\n* `DECLINED` - The transaction was declined.\n* `EXPIRED` - Acme reversed the authorization as it has passed its expiration time.\n* `PENDING` - Authorization is pending completion from the merchant.\n* `SETTLED` - The transaction is complete.\n* `VOIDED` - The merchant has voided the previously pending authorization.\n","example":"SETTLED"},"token":{"type":"string","format":"uuid","description":"Globally unique identifier."}}},"SettlementReport":{"type":"object","required":["currency","settled_net_amount","transactions_gross_amount","interchange_gross_amount","disputes_gross_amount","other_fees_gross_amount","details","created","updated","report_date"],"properties":{"currency":{"type":"string","minLength":3,"maxLength":3,"nullable":false,"description":"Three-digit alphabetic ISO 4217 code.\n","example":"840"},"settled_net_amount":{"type":"integer","description":"The total net amount of cash moved. (net value of settled_gross_amount, interchange, fees).","example":1893},"transactions_gross_amount":{"type":"integer","description":"The total amount of settlement impacting transactions (excluding interchange, fees, and disputes).","example":1900},"interchange_gross_amount":{"type":"integer","description":"The total amount of interchange.","example":-7},"disputes_gross_amount":{"type":"integer","description":"The total gross amount of disputes settlements.","example":0},"other_fees_gross_amount":{"type":"integer","description":"Total amount of gross other fees outside of interchange.","example":0},"details":{"type":"array","items":{"$ref":"#/components/schemas/settlementSummaryDetails"}},"created":{"type":"string","format":"date-time","description":"Date and time when the transaction first occurred. UTC time zone.","example":"2023-06-01T00:00:00"},"updated":{"type":"string","format":"date-time","description":"Date and time when the transaction first occurred. UTC time zone.","example":"2023-06-01T00:00:00"},"report_date":{"type":"string","description":"Date of when the report was first generated.","example":"2023-06-01"}}},"SettlementDetail":{"type":"object","required":["token","institution","account_token","event_tokens","transaction_token","card_token","card_program_token","currency","network","transactions_gross_amount","interchange_gross_amount","disputes_gross_amount","other_fees_gross_amount","other_fees_details","created","updated","settlement_date","report_date"],"properties":{"token":{"type":"string","description":"Globally unique identifier denoting the Settlement Detail.","format":"uuid","example":"e34a817f-119d-4976-9fb3-8b020b8bbec3"},"institution":{"type":"string","description":"The most granular ID the network settles with (e.g., ICA for Mastercard, FTSRE for Visa).","example":"00001"},"account_token":{"type":"string","description":"The most granular ID the network settles with (e.g., ICA for Mastercard, FTSRE for Visa).","format":"uuid","example":"e34a817f-119d-4976-9fb3-8b020b8bbec3"},"event_tokens":{"type":"array","description":"Globally unique identifiers denoting the Events associated with this settlement.","example":["e34a817f-119d-4976-9fb3-8b020b8bbec3"]},"transaction_token":{"type":"string","description":"Globally unique identifier denoting the associated Transaction object.","format":"uuid","example":"e34a817f-119d-4976-9fb3-8b020b8bbec3"},"card_token":{"type":"string","description":"Globally unique identifier denoting the card that the associated Transaction occurred on.","format":"uuid","example":"e34a817f-119d-4976-9fb3-8b020b8bbec3"},"card_program_token":{"type":"string","description":"Globally unique identifier denoting the card program that the associated Transaction occurred on.","format":"uuid","example":"e34a817f-119d-4976-9fb3-8b020b8bbec3"},"currency":{"type":"string","minLength":3,"maxLength":3,"nullable":false,"description":"Three-digit alphabetic ISO 4217 code.","example":"840"},"network":{"type":"string","nullable":false,"enum":["MASTERCARD","VISA","INTERLINK","MAESTRO","UNKNOWN"],"description":"Card network where the transaction took place.","example":"MASTERCARD"},"transactions_gross_amount":{"type":"integer","description":"The total amount of settlement impacting transactions (excluding interchange, fees, and disputes).","example":1900},"interchange_gross_amount":{"type":"integer","description":"The total amount of interchange.","example":-7},"disputes_gross_amount":{"type":"integer","description":"The total gross amount of disputes settlements.","example":0},"other_fees_gross_amount":{"type":"integer","description":"Total amount of gross other fees outside of interchange.","example":0},"other_fees_details":{"type":"object","description":"The total gross amount of other fees by type.","properties":{"title":"ISA","type":"integer"}},"created":{"type":"string","format":"date-time","description":"Date and time when the transaction first occurred. UTC time zone.","example":"2023-06-01T00:00:00"},"updated":{"type":"string","format":"date-time","description":"Date and time when the transaction first occurred. UTC time zone.","example":"2023-06-01T00:00:00"},"settlement_date":{"type":"string","description":"Date of when money movement is triggered for the transaction.","example":"2023-06-01"},"report_date":{"type":"string","description":"Date of when the report was first generated.","example":"2023-06-01"}}},"AccountState":{"title":"AccountState","enum":["ENABLED","CLOSED","PAUSED"]},"VerificationState":{"title":"VerificationState","enum":["PENDING","ENABLED","FAILED_VERIFICATION"]},"AccountType":{"title":"AccountType","enum":["CHECKING","SAVINGS"]},"VerificationMethod":{"title":"VerificationMethod","type":"string","enum":["MANUAL","MICRO_DEPOSIT","PLAID"]},"OwnerType":{"title":"OwnerType","type":"string","enum":["INDIVIDUAL","BUSINESS"]},"BankAccountApiResponse":{"title":"BankAccountApiResponse","required":["country","created","currency","last_four","owner","owner_type","routing_number","state","token","type","verification_method","verification_state"],"type":"object","properties":{"account_token":{"title":"Account Token","type":"string","format":"uuid","description":"Indicates which Acme account the external account is associated with. For external accounts that are associated with the program, account_token field returned will be null"},"address":{"$ref":"#/components/schemas/ExternalBankAccountAddress"},"company_id":{"title":"Company Id","type":"string","description":"Optional field that helps identify bank accounts in receipts"},"country":{"title":"Country","type":"string","description":"The country that the bank account is located in using ISO 3166-1. We will only accept USA bank accounts e.g., USA"},"created":{"title":"Created","type":"string","format":"date-time","description":"An ISO 8601 string representing when this funding source was added to the Acme account."},"currency":{"title":"Currency","type":"string","description":"currency of the external account 3-digit alphabetic ISO 4217 code"},"dob":{"title":"Date of Birth","type":"string","format":"date","description":"Date of Birth of the Individual that owns the external bank account"},"doing_business_as":{"title":"Doing Business As","type":"string"},"last_four":{"title":"Last Four","type":"string","description":"The last 4 digits of the bank account. Derived by Acme from the account number passed"},"name":{"title":"Name","type":"string","description":"The nickname given to this record of External Bank Account"},"owner":{"title":"Owner","type":"string","description":"Legal Name of the business or individual who owns the external account. This will appear in statements"},"owner_type":{"title":"Owner Type","type":"string","enum":["INDIVIDUAL","BUSINESS"]},"routing_number":{"title":"Routing Number","type":"string"},"state":{"title":"State","type":"string","enum":["ENABLED","CLOSED","PAUSED"]},"token":{"title":"Token","type":"string","format":"uuid","description":"A globally unique identifier for this record of an external bank account association. If a program links an external bank account to more than one end-user or to both the program and the end-user, then Acme will return each record of the association"},"type":{"title":"Type","type":"string","enum":["CHECKING","SAVINGS"]},"user_defined_id":{"title":"User Defined ID","type":"string"},"verification_failed_reason":{"title":"Verification Failed Reason","type":"string","description":"Optional free text description of the reason for the failed verification. For ACH micro-deposits returned, this field will display the reason return code sent by the ACH network"},"verification_method":{"title":"Verification Method","type":"string","enum":["MANUAL","MICRO_DEPOSIT","PLAID"]},"verification_state":{"title":"Verification State","type":"string","enum":["PENDING","ENABLED","FAILED_VERIFICATION"]}}},"BankAccountsApiResponse":{"title":"BankAccountsApiResponse","required":["data","has_more"],"type":"object","properties":{"data":{"title":"Data","type":"array","items":{"$ref":"#/components/schemas/BankAccountApiResponse"}},"has_more":{"title":"More data exists","type":"boolean"}}},"PlaidCreateBankAccountApiRequest":{"title":"PlaidCreateBankAccountApiRequest","required":["verification_method","owner_type","owner","processor_token"],"type":"object","properties":{"verification_method":{"$ref":"#/components/schemas/VerificationMethod"},"owner_type":{"$ref":"#/components/schemas/OwnerType"},"owner":{"title":"Owner","maxLength":22,"minLength":1,"pattern":"^[!-~ ]*$","type":"string"},"account_token":{"title":"Account Token","type":"string","format":"uuid"},"company_id":{"title":"Company Id","maxLength":10,"minLength":1,"pattern":"^[a-zA-Z0-9]*$","type":"string"},"processor_token":{"title":"Processor Token","minLength":1,"type":"string"},"dob":{"title":"Date of Birth","type":"string","format":"date","description":"Date of Birth of the Individual that owns the external bank account"},"doing_business_as":{"title":"Doing Business As","type":"string"},"user_defined_id":{"title":"User Defined ID","type":"string"}}},"ExternalBankAccountAddress":{"title":"Address","required":["address1","city","state","postal_code","country"],"type":"object","description":"Address used during Address Verification Service (AVS) checks during transactions if enabled via Auth Rules.","properties":{"address1":{"title":"Address1","type":"string","maxLength":40,"minLength":1},"address2":{"title":"Address2","type":"string","maxLength":40,"minLength":1},"city":{"title":"City","type":"string","maxLength":40,"minLength":1},"state":{"title":"State","type":"string","maxLength":2,"minLength":2},"postal_code":{"title":"Postal Code","type":"string","maxLength":10,"minLength":5,"pattern":"^[0-9]{5}(-[0-9]{4})?$"},"country":{"title":"Country","type":"string","maxLength":3,"minLength":3,"pattern":"^[A-Z]{3}$"}}},"BankVerifiedCreateBankAccountApiRequest":{"title":"BankVerifiedCreateBankAccountApiRequest","required":["verification_method","owner_type","owner","type","routing_number","account_number","country","currency"],"type":"object","properties":{"verification_method":{"$ref":"#/components/schemas/VerificationMethod"},"owner_type":{"$ref":"#/components/schemas/OwnerType"},"owner":{"title":"Owner","maxLength":22,"minLength":1,"pattern":"^[!-~ ]*$","type":"string"},"account_token":{"title":"Account Token","type":"string","format":"uuid"},"company_id":{"title":"Company Id","maxLength":10,"minLength":1,"pattern":"^[a-zA-Z0-9]*$","type":"string"},"type":{"$ref":"#/components/schemas/AccountType"},"routing_number":{"title":"Routing Number","minLength":1,"pattern":"^[0-9]{9}$","type":"string"},"account_number":{"title":"Account Number","type":"string"},"name":{"title":"Name","maxLength":50,"minLength":1,"pattern":"^[!-~ ]*$","type":"string"},"country":{"title":"Country","maxLength":3,"minLength":3,"pattern":"^[A-Z]{3}$","type":"string"},"currency":{"title":"Currency","maxLength":3,"minLength":3,"pattern":"^[A-Z]{3}$","type":"string"},"verification_enforcement":{"title":"Verification Enforcement","type":"boolean","default":true,"description":"Indicates whether verification was enforced for a given association record. For MICRO_DEPOSIT, option to disable verification if the external bank account has already been verified before. By default, verification will be required unless users pass in a value of false"},"address":{"$ref":"#/components/schemas/ExternalBankAccountAddress"},"dob":{"title":"Date of Birth","type":"string","format":"date","description":"Date of Birth of the Individual that owns the external bank account"},"doing_business_as":{"title":"Doing Business As","type":"string"},"user_defined_id":{"title":"User Defined ID","type":"string"}}},"UpdateBankAccountApiRequest":{"title":"UpdateBankAccountApiRequest","type":"object","properties":{"owner":{"title":"Owner","maxLength":22,"minLength":1,"pattern":"^[!-~ ]*$","type":"string"},"owner_type":{"$ref":"#/components/schemas/OwnerType"},"name":{"title":"Name","maxLength":50,"minLength":1,"pattern":"^[!-~ ]*$","type":"string"},"company_id":{"title":"Company Id","maxLength":10,"minLength":1,"pattern":"^[a-zA-Z0-9]*$","type":"string"},"address":{"$ref":"#/components/schemas/ExternalBankAccountAddress"},"dob":{"title":"Date of Birth","type":"string","format":"date","description":"Date of Birth of the Individual that owns the external bank account"},"doing_business_as":{"title":"Doing Business As","type":"string"},"user_defined_id":{"title":"User Defined ID","type":"string"}}},"MicroDepositVerificationDetails":{"title":"MicroDepositVerificationDetails","required":["micro_deposits"],"type":"object","properties":{"micro_deposits":{"title":"Micro Deposits","type":"array","items":{"type":"integer"}}}},"SimulateReleaseRequest":{"title":"SimulateReleaseRequest","required":["payment_token"],"type":"object","properties":{"payment_token":{"title":"Payment Token","type":"string","format":"uuid"}}},"SimulateReturnRequest":{"title":"SimulateReturnRequest","required":["payment_token"],"type":"object","properties":{"payment_token":{"title":"Payment Token","type":"string","format":"uuid"},"return_reason_code":{"title":"Payment Token","type":"string","default":"R01"}}},"SimulateReleaseResponse":{"title":"SimulateReleaseResponse","type":"object","properties":{"debugging_request_id":{"title":"Debugging Request Id","type":"string","format":"uuid"},"result":{"title":"Result","type":"string","enum":["APPROVED","DECLINED"]},"transaction_event_token":{"title":"Transaction Event Token","type":"string","format":"uuid"}}},"SimulateReturnResponse":{"title":"SimulateReturnResponse","type":"object","properties":{"debugging_request_id":{"title":"Debugging Request Id","type":"string","format":"uuid"},"result":{"title":"Result","type":"string","enum":["APPROVED","DECLINED"]},"transaction_event_token":{"title":"Transaction Event Token","type":"string","format":"uuid"}}},"CreatePaymentRequest":{"title":"CreatePaymentRequest","required":["financial_account_token","external_bank_account_token","type","amount","method_attributes","method"],"type":"object","properties":{"financial_account_token":{"title":"Financial Account Token","type":"string","format":"uuid"},"external_bank_account_token":{"title":"External Bank Account Token","type":"string","format":"uuid"},"type":{"title":"Payment Type","type":"string","enum":["PAYMENT","COLLECTION"]},"amount":{"title":"Amount","type":"integer","minimum":1},"memo":{"title":"Memo","type":"string","maxLength":512},"method_attributes":{"$ref":"#/components/schemas/PaymentMethodAttributes"},"method":{"title":"Payment Method","type":"string","enum":["ACH_NEXT_DAY","ACH_SAME_DAY"]},"token":{"title":"Token","type":"string","format":"uuid"},"user_defined_id":{"title":"User Defined Id","type":"string","maxLength":512}}},"PaymentMethodAttributes":{"title":"PaymentMethodAttributes","required":["sec_code"],"type":"object","properties":{"retries":{"title":"Retries","type":"integer"},"return_reason_code":{"title":"Return Reason Code","type":"string"},"sec_code":{"title":"SEC Code","type":"string","enum":["PPD","CCD","WEB"]}}},"PostPaymentResponse":{"title":"PostPaymentResponse","allOf":[{"$ref":"#/components/schemas/PaymentResponse"},{"type":"object","properties":{"balance":{"$ref":"#/components/schemas/Balance"}}}]},"PaymentResponse":{"title":"PaymentResponse","allOf":[{"$ref":"#/components/schemas/FinancialTransaction"},{"type":"object","required":["method_attributes","direction","source","method"],"properties":{"method_attributes":{"$ref":"#/components/schemas/PaymentMethodAttributes"},"external_bank_account_token":{"title":"External Bank Account Token","type":"string","format":"uuid"},"direction":{"title":"ACH Direction","type":"string","enum":["CREDIT","DEBIT"]},"source":{"title":"Payment Message Source","type":"string","enum":["ACME","CUSTOMER"]},"method":{"title":"Payment Method","type":"string","enum":["ACH_NEXT_DAY","ACH_SAME_DAY"]},"user_defined_id":{"title":"User Defined Id","type":"string","maxLength":512}}}]},"Tokenization":{"type":"object","required":["token","token_requestor_name","account_token","card_token","token_unique_reference","status","created_at","updated_at"],"properties":{"token":{"type":"string","format":"uuid","description":"A fixed-width 23-digit numeric identifier for the Transaction that may be set if the transaction originated from the Mastercard network. This number may be used for dispute tracking.\n"},"token_requestor_name":{"type":"string","enum":["APPLE_PAY","GOOGLE","SAMSUNG_PAY"],"description":"The entity that is requested the tokenization. Represents a Digital Wallet."},"account_token":{"type":"string","format":"uuid","description":"The account token associated with the card being tokenized."},"card_token":{"type":"string","format":"uuid","description":"The card token associated with the card being tokenized."},"token_unique_reference":{"type":"string","description":"The network's unique reference for the tokenization."},"status":{"type":"string","enum":["APPROVED","DECLINED","REQUIRE_ADDITIONAL_AUTHENTICATION"],"description":"The status of the tokenization request"},"created_at":{"type":"string","format":"date-time","description":"Date and time when the tokenization first occurred. UTC time zone."},"updated_at":{"type":"string","format":"date-time","description":"Latest date and time when the tokenization was updated. UTC time zone."}}},"Statement":{"title":"StatementResponse","type":"object","required":["ach_period_total","ach_ytd_total","adjustments_period_total","adjustments_ytd_total","amount_due","available_credit","created","credit_limit","days_in_billing_cycle","ending_balance","financial_account_token","payment_due_date","purchases_period_total","purchases_ytd_total","starting_balance","statement_end_date","statement_start_date","token","updated"],"properties":{"ach_period_total":{"title":"ACH Period Total","type":"integer","description":"Total payments during this billing period."},"ach_ytd_total":{"title":"ACH YTD Total","type":"integer","description":"Year-to-date settled payment total"},"adjustments_period_total":{"title":"Adjustments Period Total","type":"integer","description":"Total adjustments during this billing period."},"adjustments_ytd_total":{"title":"Adjustments YTD Total","type":"integer","description":"Year-to-date settled adjustments total"},"amount_due":{"title":"Amount Due","type":"integer","description":"Payment due at the end of the billing period. Negative amount indicates something is owed. If the amount owed is positive (e.g., there was a net credit), then payment should be returned to the cardholder via ACH."},"available_credit":{"title":"Available Credit","type":"integer","description":"Amount of credit available to spend"},"created":{"title":"Created Time","type":"string","format":"date-time","description":"Timestamp of when the statement was created"},"credit_limit":{"title":"Credit Limit","type":"integer","description":"For prepay accounts, this is the minimum prepay balance that must be maintained. For charge card accounts, this is the maximum credit balance extended by a lender."},"days_in_billing_cycle":{"title":"Days in Billing Cycle","type":"integer","description":"Number of days in the billing cycle"},"ending_balance":{"title":"Ending Balance","type":"integer","description":"Balance at the end of the billing period. For charge cards, this should be the same at the statement amount due."},"financial_account_token":{"title":"Financial Account Token","type":"string","format":"uuid","description":"Globally unique identifier for a financial account"},"payment_due_date":{"title":"Payment Due Date","type":"string","format":"date","description":"Date when the payment is due"},"purchases_period_total":{"title":"Purchases Period Total","type":"integer","description":"Total settled card transactions during this billing period, determined by liability date."},"purchases_ytd_total":{"title":"Purchases YTD Total","type":"integer","description":"Year-to-date settled card transaction total"},"starting_balance":{"title":"Starting Balance","type":"integer","description":"Balance at the start of the billing period"},"statement_end_date":{"title":"Statement End Date","type":"string","format":"date","description":"Date when the billing period ended"},"statement_start_date":{"title":"Statement Start Date","type":"string","format":"date","description":"Date when the billing period began"},"token":{"title":"Statement Token","type":"string","description":"Globally unique identifier for a statement"},"updated":{"title":"Updated Time","type":"string","format":"date-time","description":"Timestamp of when the statement was updated"}}},"StatementLineItem":{"title":"StatementLineItemResponse","type":"object","required":["amount","category","created","currency","event_type","financial_account_token","financial_transaction_token","settled_date","token"],"properties":{"amount":{"title":"Amount","type":"integer"},"card_token":{"title":"Card Token","type":"string","format":"uuid","description":"Globally unique identifier for a card"},"category":{"title":"Category of Transaction","type":"string","enum":["CARD","ACH","TRANSFER"]},"created":{"title":"Created","type":"string","format":"date-time","description":"Timestamp of when the line item was generated"},"currency":{"title":"Currency","type":"string","description":"3-digit alphabetic ISO 4217 code for the settling currency of the transaction"},"descriptor":{"title":"Descriptor","type":"string"},"event_type":{"$ref":"#/components/schemas/FinancialEventType"},"financial_account_token":{"title":"Financial Account Token","type":"string","format":"uuid","description":"Globally unique identifier for a financial account"},"financial_transaction_token":{"title":"Financial Account Token","type":"string","format":"uuid","description":"Globally unique identifier for a financial transaction"},"settled_date":{"title":"Settled Date","type":"string","format":"date","description":"Date that the transaction settled"},"token":{"title":"Token","type":"string","format":"uuid","description":"Globally unique identifier for a Statement Line Item"}}}},"securitySchemes":{"ApiKeyAuth":{"type":"apiKey","in":"header","name":"Authorization"}}},"webhooks":{"account_holder.created":{"post":{"description":"Occurs when a new account_holder is created and is either ACCEPTED or PENDING_REVIEW.","requestBody":{"content":{"application/json":{"schema":{"type":"object","examples":[{"account_token":"00000000-0000-0000-0000-000000000001","created":"2023-09-26 16:41:40.530987","event_type":"account_holder.created","status":"ACCEPTED","status_reasons":[],"token":"00000000-0000-0000-0000-000000000001"}],"properties":{"account_token":{"type":"string","format":"uuid","description":"The token of the account that was created.","example":"00000000-0000-0000-0000-000000000001"},"token":{"type":"string","format":"uuid","description":"The token of the account_holder that was created.","example":"00000000-0000-0000-0000-000000000001"},"event_type":{"description":"The name of the event","type":"string","enum":["account_holder.created"],"example":"account_holder.created"},"created":{"description":"When the account_holder was created","type":"string","format":"date-time"},"status":{"type":"string","description":"The status of the account_holder that was created.","enum":["ACCEPTED","PENDING_REVIEW"],"example":"ACCEPTED"},"status_reasons":{"type":"array","items":{"type":"string","description":"If status is not ACCEPTED, status_reasons provides the reasons an account_holder is PENDING_REVIEW."}}}}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}},"account_holder.updated":{"post":{"description":"Occurs when a new account_holder is updated.","requestBody":{"content":{"application/json":{"schema":{"type":"object","examples":[{"token":"00000000-0000-0000-0000-000000000001","created":"2023-09-26 16:41:40.530938","event_type":"account_holder.updated","email":"john@acme.com","phone_number":"15555555555","business_account_token":null,"external_id":null,"first_name":"John","last_name":"Appleseed"}],"properties":{"token":{"type":"string","format":"uuid","description":"The token of the account_holder that was created.","example":"00000000-0000-0000-0000-000000000001"},"event_type":{"description":"The name of the event","type":"string","enum":["account_holder.updated"],"example":"account_holder.updated"},"created":{"description":"When the account_holder updated event was created","type":"string","format":"date-time"},"business_account_token":{"type":"string","format":"uuid","description":"If applicable, represents the business account token associated with the account_holder.","example":"00000000-0000-0000-0000-000000000001"},"external_id":{"type":"string","format":"uuid","description":"If applicable, represents the external_id associated with the account_holder.","example":"00000000-0000-0000-0000-000000000001"},"email":{"type":"string","description":"If updated, the newly updated email associated with the account_holder otherwise the existing email is provided.","example":"johnny@acme.com"},"phone_number":{"type":"string","description":"If updated, the newly updated phone_number associated with the account_holder otherwise the existing phone_number is provided.","example":"15555555555"},"first_name":{"type":"string","description":"If applicable, represents the account_holder's first name.","example":"Johnny"},"last_name":{"type":"string","description":"If applicable, represents the account_holder's last name.","example":"Appleseed"},"legal_business_name":{"type":"string","description":"If applicable, represents the account_holder's business name.","example":"Acme"}}}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}},"account_holder.verification":{"post":{"description":"Occurs when an asynchronous account_holder's verification is completed.","requestBody":{"content":{"application/json":{"schema":{"type":"object","examples":[{"account_token":"00000000-0000-0000-0000-000000000001","created":"2023-09-26 16:41:40.530938","event_type":"account_holder.verification","status":"ACCEPTED","status_reasons":[],"token":"00000000-0000-0000-0000-000000000001"}],"properties":{"account_token":{"type":"string","format":"uuid","description":"The token of the account being verified.","example":"00000000-0000-0000-0000-000000000001"},"token":{"type":"string","format":"uuid","description":"The token of the account_holder being verified.","example":"00000000-0000-0000-0000-000000000001"},"event_type":{"description":"The name of the event","type":"string","enum":["account_holder.verification"],"example":"account_holder.verification"},"created":{"description":"When the account_holder verification status was updated","type":"string","format":"date-time"},"status":{"type":"string","description":"The status of the account_holder that was created","enum":["ACCEPTED","REJECTED","PENDING_REVIEW"],"example":"ACCEPTED"},"status_reasons":{"type":"array","items":{"type":"string","description":"If status is not ACCEPTED, status_reasons provides the reasons an account_holder was REJECTED or is PENDING_REVIEW."}}}}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}},"card.created":{"post":{"description":"Occurs when a new card is created.","requestBody":{"content":{"application/json":{"schema":{"type":"object","examples":[{"card_token":"00000000-0000-0000-0000-000000000001","event_type":"card.created"}],"properties":{"card_token":{"type":"string","format":"uuid","description":"The token of the card that was created.","example":"00000000-0000-0000-0000-000000000001"},"event_type":{"type":"string","enum":["card.created"],"description":"The type of event that occurred.","example":"card.created"}}}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}},"card.shipped":{"post":{"description":"Occurs when a card is shipped.","requestBody":{"content":{"application/json":{"schema":{"type":"object","examples":[{"card_token":"00000000-0000-0000-0000-000000000001","event_type":"card.shipped","shipping_method":"USPS without tracking envelope","tracking_number":"1Z9999999999999999"}],"properties":{"card_token":{"type":"string","format":"uuid","description":"The token of the card that was shipped.","example":"00000000-0000-0000-0000-000000000001"},"event_type":{"type":"string","enum":["card.shipped"],"description":"The type of event that occurred.","example":"card.shipped"},"shipping_method":{"type":"string","enum":["USPS without tracking envelope","USPS without tracking envelope non-machine","USPS without tracking flat","USPS with tracking","USPS priority","FedEx overnight","FedEx 2 days","FedEx express","Ex-US standard without tracking","Ex-US standard with tracking","Ex-US expedited with tracking"],"description":"The specific shipping method used to ship the card.","example":"USPS without tracking envelope"},"tracking_number":{"type":"string","description":"The tracking number of the shipment.","example":"1Z9999999999999999"}}}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}},"card_transaction.updated":{"post":{"description":"Occurs when a card transaction happens.","requestBody":{"content":{"application/json":{"schema":{"examples":[{"acquirer_fee":0,"acquirer_reference_number":null,"amount":1800,"authorization_amount":1800,"authorization_code":"071471","card_token":"aac502f9-aecc-458a-954e-4bcf6edb6123","cardholder_authentication":{"3ds_version":null,"acquirer_exemption":"NONE","liability_shift":"NONE","verification_attempted":"NONE","verification_result":"NOT_ATTEMPTED"},"created":"2023-08-03T18:42:30Z","event_type":"card_transaction.updated","events":[{"amount":1800,"created":"2023-08-03T18:42:30Z","result":"APPROVED","token":"bbbf1e86-322d-11ee-9779-00505685a123","type":"AUTHORIZATION"}],"merchant":{"acceptor_id":"452322000053360","city":"gosq.com","country":"USA","descriptor":"SQ *SOMA EATS","mcc":"5812","state":"CA"},"merchant_amount":1800,"merchant_authorization_amount":1800,"merchant_currency":"USD","network":"MASTERCARD","result":"APPROVED","settled_amount":0,"status":"PENDING","token":"c30c2182-1e69-4e0d-b40f-eec0d2a19123"}],"allOf":[{"$ref":"#/components/schemas/Transaction"},{"type":"object","properties":{"event_type":{"type":"string","enum":["card_transaction.updated"],"description":"The type of event that occurred.","example":"card_transaction.updated"}}}]}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}},"digital_wallet.tokenization_approval_request":{"post":{"description":"Occurs when a tokenization approval request is made.","requestBody":{"content":{"application/json":{"schema":{"type":"object","examples":[{"event_type":"digital_wallet.tokenization_approval_request","created":"2023-09-18T12:34:56Z","tokenization_source":"PUSH_PROVISION","tokenization_token":"tok_1234567890abcdef","card_token":"00000000-0000-0000-0000-000000000001","account_token":"00000000-0000-0000-0000-000000000002","issuer_decision":"APPROVED","digital_wallet_token_metadata":{"status":"Pending","token_requestor_id":"12345678901","token_requestor_name":"APPLE_PAY","payment_app_instance_id":"app_instance_123456789012345678901234567890","payment_account_info":{"payment_account_reference":"ref_1234567890123456789012","pan_unique_reference":"pan_unique_ref_1234567890123456789012345678","token_unique_reference":"token_unique_ref_1234567890123456789012345678","account_holder_data":{"phone_number":"+123456789012"}}},"wallet_decisioning_info":{"account_score":"100","device_score":"100","recommendation_reasons":["Reason1"],"recommended_decision":"Decision1"},"device":{"imei":"123456789012345","location":"37.3860517,-122.0838511","ip_address":"1.1.1.1"},"customer_tokenization_decision":{"outcome":"APPROVED","response_code":"123456","latency":"100","responder_url":"https://example.com"}}],"properties":{"event_type":{"description":"The name of this event","type":"string","enum":["digital_wallet.tokenization_approval_request"],"example":"digital_wallet.tokenization_approval_request"},"created":{"description":"Indicate when the request was received from Mastercard or Visa","type":"string","format":"date-time"},"tokenization_source":{"description":"The source of the tokenization.","type":"string","enum":["PUSH_PROVISION","MANUAL_PROVISION","ACCOUNT_ON_FILE"],"example":"PUSH_PROVISION"},"tokenization_token":{"description":"Unique identifier for the digital wallet token attempt","type":"string"},"card_token":{"description":"Unique identifier for the card being tokenized","type":"string","example":"00000000-0000-0000-0000-000000000001"},"account_token":{"description":"Unique identifier for the user tokenizing a card","type":"string","example":"00000000-0000-0000-0000-000000000002"},"issuer_decision":{"description":"Whether Acme decisioned on the token, and if so, what the decision was. APPROVED/VERIFICATION_REQUIRED/DENIED.","type":"string","enum":["APPROVED","DENIED","VERIFICATION_REQUIRED"],"example":"APPROVED"},"digital_wallet_token_metadata":{"description":"Contains the metadata for the digital wallet being tokenized","type":"object","properties":{"status":{"description":"The current status of the digital wallet token. Pending or declined.","type":"string"},"token_requestor_id":{"description":"The party that requested the digitization","type":"string","minLength":11,"maxLength":11},"token_requestor_name":{"description":"Human-readable name of the wallet that the token_requestor_id maps to.","type":"string","enum":["APPLE_PAY","GOOGLE_PAY","SAMSUNG_PAY"],"example":"APPLE_PAY"},"payment_app_instance_id":{"description":"The identifier of the Payment App instance within a device that will be provisioned with a token","type":"string","maxLength":48},"payment_account_info":{"description":"Contains the information of the account responsible for the payment.","type":"object","properties":{"payment_account_reference":{"description":"The unique account reference assigned to the PAN","type":"string","maxLength":29},"pan_unique_reference":{"description":"Reference to the PAN that is unique per Wallet Provider","type":"string","maxLength":64},"token_unique_reference":{"description":"A unique reference assigned following the allocation of a token used to identify the token for the duration of its lifetime.","type":"string","maxLength":64},"account_holder_data":{"description":"Additional information that can be used to identify the account holder, such as name, address, etc","type":"object","properties":{"phone_number":{"description":"The phone number, may contain country code along with phone number when countryDialInCode is not present","type":"string","maxLength":20}}}},"required":["account_holder_data"]}},"required":["status","payment_account_info"]},"wallet_decisioning_info":{"description":"Contains information about the decision recommended by the Wallet Provider","type":"object","properties":{"account_score":{"description":"Score given to the account by the Wallet Provider","type":"string","maxLength":64,"example":100},"device_score":{"description":"Score given to the device by the Wallet Provider","type":"string","maxLength":64,"example":100},"recommendation_reasons":{"description":"Reasons provided to the Wallet Provider on how the recommended decision was reached","type":"array","items":{"type":"string"}},"recommended_decision":{"description":"The decision recommended by the Wallet Provider","type":"string","maxLength":64}}},"device":{"description":"Contains information about the target device to be provisioned","type":"object","properties":{"imei":{"description":"The IMEI number of the device being provisioned","type":"string","maxLength":15,"example":123456789012345},"location":{"description":"Latitude and longitude where the device the consumer is attempting to authorize is located","type":"string","maxLength":64,"example":"37.3860517,-122.0838511"},"ip_address":{"description":"The IP of the device initiating the request","type":"string","maxLength":64,"example":"1.1.1.1"}}},"customer_tokenization_decision":{"description":"Contains information about the customer's tokenization decision if they are enrolled","type":"object","properties":{"outcome":{"description":"The outcome of the customer's decision","type":"string","enum":["APPROVED","DECLINED","ERROR","INVALID_RESPONSE","REQUIRE_ADDITIONAL_AUTHENTICATION","TIMEOUT"],"example":"APPROVED"},"response_code":{"description":"The response code that the customer provided","type":"string","example":123456},"latency":{"description":"Time in ms it took for the customer's URL to respond","type":"string","example":100},"responder_url":{"description":"The customer's subscribed URL","type":"string","example":"https://example.com"}},"required":["outcome","responder_url"]}},"required":["event_type","created","tokenization_token","card_token","account_token","issuer_decision","digital_wallet_token_metadata","wallet_decisioning_info"]}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}},"digital_wallet.tokenization_result":{"post":{"description":"Occurs when a tokenization request succeeded or failed.","requestBody":{"content":{"application/json":{"schema":{"type":"object","examples":[{"account_token":"00000000-0000-0000-0000-000000000002","card_token":"00000000-0000-0000-0000-000000000001","created":"2020-01-01T00:00:00Z","event_type":"digital_wallet.tokenization_result","tokenization_result_details":{"issuer_decision":"APPROVED","tokenization_decline_reasons":["ACCOUNT_SCORE_1","DEVICE_SCORE_1"],"wallet_decision":"APPROVED"},"tokenization_token":"00000000-0000-0000-0000-000000000003"}],"properties":{"account_token":{"description":"Account token","type":"string","example":"00000000-0000-0000-0000-000000000002"},"card_token":{"description":"Card token","type":"string","example":"00000000-0000-0000-0000-000000000001"},"created":{"description":"Created date","type":"string","format":"date-time","example":"2020-01-01T00:00:00Z"},"event_type":{"description":"The name of this event","type":"string","enum":["digital_wallet.tokenization_result"],"example":"digital_wallet.tokenization_result"},"tokenization_result_details":{"additionalProperties":false,"description":"The result of the tokenization request.","properties":{"customer_decision":{"description":"The customer's tokenization decision if applicable.","type":"string","enum":["APPROVED","DECLINED","REQUIRE_ADDITIONAL_AUTHENTICATION"]},"issuer_decision":{"description":"Acme's tokenization decision.","type":"string","enum":["APPROVED","DENIED","VERIFICATION_REQUIRED"]},"token_activated_date_time":{"description":"An RFC 3339 timestamp indicating when the tokenization succeeded.","type":"string","format":"date-time","example":"2020-01-01T00:00:00Z"},"tokenization_decline_reasons":{"description":"A list of reasons the tokenization failed.","items":{"type":"string","enum":["ACCOUNT_SCORE_1","DEVICE_SCORE_1","ALL_WALLET_DECLINE_REASONS_PRESENT","WALLET_RECOMMENDED_DECISION_RED","CVC_MISMATCH","CARD_EXPIRY_MONTH_MISMATCH","CARD_EXPIRY_YEAR_MISMATCH","CARD_INVALID_STATE","CUSTOMER_RED_PATH","INVALID_CUSTOMER_RESPONSE","NETWORK_FAILURE"]},"type":"array","example":["ACCOUNT_SCORE_1","DEVICE_SCORE_1"]},"wallet_decision":{"description":"The wallet's recommended decision.","type":"string","enum":["APPROVED","DECLINED","REQUIRE_ADDITIONAL_AUTHENTICATION"],"example":"APPROVED"}},"required":["issuer_decision","tokenization_decline_reasons"],"type":"object"},"tokenization_token":{"type":"string","description":"Tokenization token","example":"00000000-0000-0000-0000-000000000003"}},"required":["event_type","created","account_token","card_token","tokenization_token","tokenization_result_details"]}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}},"digital_wallet.tokenization_two_factor_authentication_code":{"post":{"description":"Occurs when a tokenization request 2FA auth code is delivered.","requestBody":{"content":{"application/json":{"schema":{"description":"Self Serve 2FA Code Schema","type":"object","examples":[{"account_token":"00000000-0000-0000-0000-000000000002","activation_method":{"type":"TEXT_TO_CARDHOLDER_NUMBER","value":5555555555},"authentication_code":123456,"card_token":"00000000-0000-0000-0000-000000000001","created":"2020-01-01T00:00:00Z","event_type":"digital_wallet.tokenization_two_factor_authentication_code","tokenization_token":"00000000-0000-0000-0000-000000000003"}],"properties":{"account_token":{"description":"Unique identifier for the user tokenizing a card","type":"string","example":"00000000-0000-0000-0000-000000000002"},"activation_method":{"description":"","properties":{"type":{"description":"The communication method that the user has selected to use to receive the 2FA Authentication Code.\nSupported Values: Sms = \"TEXT_TO_CARDHOLDER_NUMBER\". Email = \"EMAIL_TO_CARDHOLDER_ADDRESS\"","type":"string","enum":["EMAIL_TO_CARDHOLDER_ADDRESS","TEXT_TO_CARDHOLDER_NUMBER"],"example":"TEXT_TO_CARDHOLDER_NUMBER"},"value":{"description":"The location where the user wants to receive the 2FA Authentication Code.\nThe format depends on the ActivationMethod.Type field. If Type is Email, the Value will be the email address. If the Type is Sms, the Value will be the phone number.","type":"string","example":5555555555}},"required":["type","value"],"type":"object"},"authentication_code":{"description":"2FA Authentication Code to provide to the user tokenizing a card.","type":"string","example":123456},"card_token":{"description":"Unique identifier for the card being tokenized","type":"string","example":"00000000-0000-0000-0000-000000000001"},"created":{"description":"Indicate when the request was received from Mastercard or Visa","title":"Created","type":"string","format":"date-time","example":"2020-01-01T00:00:00Z"},"event_type":{"description":"The name of this event","type":"string","enum":["digital_wallet.tokenization_two_factor_authentication_code"],"example":"digital_wallet.tokenization_two_factor_authentication_code"},"tokenization_token":{"description":"Unique identifier for the tokenization","type":"string","example":"00000000-0000-0000-0000-000000000003"}},"required":["event_type","created","tokenization_token","card_token","account_token","authentication_code","activation_method"]}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}},"dispute.updated":{"post":{"description":"Occurs when a dispute is updated.","requestBody":{"content":{"application/json":{"schema":{"examples":[{"event_type":"dispute.updated","amount":200,"arbitration_date":null,"created":"2023-07-19T18:39:34.768Z","customer_filed_date":"2023-07-20T09:00:00Z","customer_note":"I didn't receive the goods.","network_claim_ids":["CLAIM-001"],"network_filed_date":"2023-07-21T11:00:00Z","network_reason_code":"4808","prearbitration_date":null,"primary_claim_id":"CLAIM-001","reason":"GOODS_SERVICES_NOT_RECEIVED","representment_date":null,"resolution_amount":null,"resolution_date":null,"resolution_note":null,"resolution_reason":null,"status":"SUBMITTED","token":"b24230fa-181e-4b31-9a5c-276747e619a0","transaction_token":"12345624-aa69-4cbc-a946-30d90181b621"}],"allOf":[{"$ref":"#/components/schemas/Dispute"},{"type":"object","properties":{"event_type":{"type":"string","enum":["dispute.updated"],"description":"The type of event that occurred.","example":"dispute.updated"}}}]}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}},"dispute_evidence.upload_failed":{"post":{"description":"Occurs when a dispute evidence upload fails.","requestBody":{"content":{"application/json":{"schema":{"examples":[{"created":"2023-07-19T18:39:34.768Z","dispute_token":"f7a74167-d6d5-4f7d-8501-36df11ba371b","token":"48b8e42c-a645-44f6-8604-20c3127e9008","upload_status":"REJECTED","event_type":"dispute_evidence.upload_failed"}],"allOf":[{"$ref":"#/components/schemas/DisputeEvidence"},{"type":"object","properties":{"event_type":{"type":"string","enum":["dispute_evidence.upload_failed"],"description":"The type of event that occurred.","example":"dispute_evidence.upload_failed"}}}]}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}},"payment_transaction.created":{"post":{"description":"Occurs when a payment transaction is created.","requestBody":{"content":{"application/json":{"schema":{"examples":[{"category":"ACH","created":"2023-09-14T12:52:44Z","currency":"USD","descriptor":"custom description","direction":"DEBIT","events":[{"amount":4103,"created":"2023-09-14T12:52:44Z","result":"APPROVED","token":"f274f723-b156-5b15-a96d-5ba8d5241b09","type":"ACH_ORIGINATION_PENDING"}],"event_type":"payment_transaction.created","external_bank_account_token":"b05c313e-35db-4b47-a33b-7b268d72b1f5","financial_account_token":"39ec6bf0-c101-520e-965a-a4fffce1d755","method":"ACH_NEXT_DAY","method_attributes":{"retries":0,"return_reason_code":null,"sec_code":"CCD"},"pending_amount":4103,"result":"APPROVED","settled_amount":0,"source":"CUSTOMER","status":"PENDING","token":"147595d7-45f4-4c91-a950-3436d16847e5","updated":"2023-09-14T12:52:44Z","user_defined_id":null}],"allOf":[{"$ref":"#/components/schemas/PaymentResponse"},{"type":"object","properties":{"event_type":{"type":"string","enum":["payment_transaction.created"],"description":"The type of event that occurred.","example":"payment_transaction.created"}}}]}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}},"payment_transaction.updated":{"post":{"description":"Occurs when a payment transaction is updated.","requestBody":{"content":{"application/json":{"schema":{"examples":[{"category":"ACH","created":"2023-09-14T12:52:44Z","currency":"USD","descriptor":"custom description","direction":"DEBIT","events":[{"amount":4103,"created":"2023-09-14T12:52:44Z","result":"APPROVED","token":"f274f723-b156-5b15-a96d-5ba8d5241b09","type":"ACH_ORIGINATION_PENDING"},{"amount":4103,"created":"2023-09-14T12:52:46Z","result":"APPROVED","token":"95719c03-7eb8-560b-9843-39da92df5231","type":"ACH_ORIGINATION_PROCESSED"},{"amount":4103,"created":"2023-09-14T12:52:47Z","result":"APPROVED","token":"87fea0af-931f-5e80-a9cf-a243aa71b89d","type":"ACH_ORIGINATION_RELEASED"}],"event_type":"payment_transaction.updated","external_bank_account_token":"b05c313e-35db-4b47-a33b-7b268d72b1f5","financial_account_token":"39ec6bf0-c101-520e-965a-a4fffce1d755","method":"ACH_NEXT_DAY","method_attributes":{"retries":0,"return_reason_code":null,"sec_code":"CCD"},"pending_amount":0,"result":"APPROVED","settled_amount":4103,"source":"CUSTOMER","status":"SETTLED","token":"147595d7-45f4-4c91-a950-3436d16847e5","updated":"2023-09-14T12:52:47Z","user_defined_id":null}],"allOf":[{"$ref":"#/components/schemas/PaymentResponse"},{"type":"object","properties":{"event_type":{"type":"string","enum":["payment_transaction.updated"],"description":"The type of event that occurred.","example":"payment_transaction.updated"}}}]}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}},"three_ds_authentication.created":{"post":{"description":"Occurs when a 3DS authentication is created.","requestBody":{"content":{"application/json":{"schema":{"type":"object","examples":[{"account_type":null,"additional_data":{"network_decision":"NOT_LOW_RISK","network_risk_score":550},"app":null,"authentication_request_type":"RECURRING_TRANSACTION","authentication_result":"SUCCESS","browser":{"accept_headers":"application/json,text/javascript,*/*;q=0.01","ip":"192.168.1.2","java_enabled":false,"javascript_enabled":null,"language":"en-US","time_zone":"240","user_agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 15_3_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148"},"card_expiry_check":"MATCH","card_token":"00000000-0000-0000-0000-000000000000","cardholder":{"address_match":true,"billing_address":{"address1":"123 MAIN ST","address2":null,"address3":null,"city":"SPRINGFIELD","country":"USA","postal_code":62701,"state":null},"email":null,"name":"John Doe","phone_number_home":null,"phone_number_mobile":null,"phone_number_work":null,"shipping_address":{"address1":"123 MAIN ST","address2":null,"address3":null,"city":"SPRINGFIELD","country":"USA","postal_code":62701,"state":null}},"channel":"BROWSER","created":"2023-08-17T19:05:01Z","decision_made_by":"ACME_RULES","event_type":"three_ds_authentication.created","merchant":{"country":"USA","id":"784959","mcc":"5968","name":"Amazon","risk_indicator":{"delivery_email_address":null,"delivery_time_frame":null,"gift_card_amount":null,"gift_card_count":null,"gift_card_currency":null,"order_availability":null,"pre_order_available_date":null,"reorder_items":null,"shipping_method":null}},"three_ri_request_type":null,"token":"00000000-0000-0000-0000-000000000001","transaction":{"amount":0,"currency":"USD","currency_exponent":2,"date_time":"2023-08-17T19:04:58Z","type":"GOODS_SERVICE_PURCHASE"}}],"definitions":{"address":{"properties":{"address1":{"description":"First line of the street address provided by the cardholder.","type":"string","example":"123 Main St","nullable":true},"address2":{"description":"Second line of the street address provided by the cardholder.","type":"string","example":"Apt 1","nullable":true},"address3":{"description":"Third line of the street address provided by the cardholder.","type":"string","nullable":true},"city":{"description":"City of the address provided by the cardholder.","type":"string","example":"San Francisco","nullable":true},"country":{"description":"Country of the address provided by the cardholder in ISO 3166-1 alpha-3 format (e.g. USA)","maxLength":3,"minLength":3,"type":"string","example":"USA","nullable":true},"postal_code":{"description":"Postal code (e.g., ZIP code) of the address provided by the cardholder","type":"string","example":94105,"nullable":true}},"type":"object"}},"description":"Occurs when Acme responds to a 3DS authentication request from card network","properties":{"account_type":{"description":"Type of account/card that is being used for the transaction. Maps to EMV 3DS field acctType.","enum":["NOT_APPLICABLE","CREDIT","DEBIT",null],"type":"string","example":"CREDIT","nullable":true},"additional_data":{"description":"","properties":{"network_decision":{"description":"(Mastercard only) Indicates whether the network would have considered the authentication request to be low risk or not.","enum":["LOW_RISK","NOT_LOW_RISK",null],"type":"string","example":"LOW_RISK","nullable":true},"network_risk_score":{"description":"(Mastercard only) Assessment by the network of the authentication risk level, with a higher value indicating a higher amount of risk. Permitted values - Integer between 0-950, in increments of 50.","type":"number","example":0,"nullable":true}},"required":[],"title":"AdditionalData","type":"object"},"app":{"description":"Object containing data about the app used in the e-commerce transaction. Present if the channel is 'APP_BASED'.","properties":{"device_info":{"description":"Device information gathered from the cardholder's device - JSON name/value pairs that is Base64url encoded.","type":"string","example":"eyJkZXZpY2VfaWQiOiJkZXZpY2VfaWQifQ==","nullable":true},"ip":{"anyOf":[{"format":"ipv4","type":"string"},{"format":"ipv6","type":"string"}],"description":"External IP address used by the app generating the 3DS authentication request.","example":"1.1.1.1","nullable":true}},"required":[],"type":"object","nullable":true},"authentication_request_type":{"description":"Type of authentication request - i.e., the type of transaction or interaction is causing the merchant to request an authentication. Maps to EMV 3DS field threeDSRequestorAuthenticationInd.","enum":["PAYMENT_TRANSACTION","RECURRING_TRANSACTION","INSTALLMENT_TRANSACTION","ADD_CARD","MAINTAIN_CARD","EMV_TOKEN_CARDHOLDER_VERIFICATION","BILLING_AGREEMENT","SPLIT_SHIPMENT","DELAYED_SHIPMENT","SPLIT_PAYMENT",null],"type":"string","example":"PAYMENT_TRANSACTION","nullable":true},"authentication_result":{"description":"Indicates the outcome of the 3DS authentication process.","enum":["SUCCESS","DECLINE"],"type":"string","example":"SUCCESS","nullable":true},"browser":{"description":"Object containing data about the browser used in the e-commerce transaction. Present if the channel is 'BROWSER'.","properties":{"accept_header":{"description":"Content of the HTTP accept headers as sent from the cardholder's browser to the 3DS requestor (e.g., merchant or digital wallet).","type":"string","example":"text/html,application/xhtml+xml","nullable":true},"ip":{"anyOf":[{"format":"ipv4","type":"string"},{"format":"ipv6","type":"string"}],"description":"IP address of the browser as returned by the HTTP headers to the 3DS requestor (e.g., merchant or digital wallet). Maps to EMV 3DS field browserIP.","example":"1.1.1.1","nullable":true},"java_enabled":{"description":"Indicates whether the cardholder's browser has the ability to execute Java. Maps to EMV 3DS field browserJavaEnabled.","type":"boolean","example":true,"nullable":true},"javascript_enabled":{"description":"Indicates whether the cardholder's browser has the ability to execute JavaScript. Maps to EMV 3DS field browserJavascriptEnabled.","type":"boolean","example":true,"nullable":true},"language":{"description":"Language of the cardholder’s browser as defined in IETF BCP47. Maps to EMV 3DS field browserLanguage.","type":"string","example":"en-US","nullable":true},"time_zone":{"description":"Time zone of the cardholder’s browser offset in minutes between UTC and the cardholder browser’s local time. The offset is positive if the local time is behind UTC and negative if it is ahead. Maps to EMV 3DS field browserTz.","type":"string","example":-240,"nullable":true},"user_agent":{"description":"Content of the HTTP user-agent header. Maps to EMV 3DS field browserUserAgent.","type":"string","nullable":true,"example":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36"}},"required":[],"title":"Browser","type":"object","nullable":true},"card_expiry_check":{"description":"Indicates whether the expiration date provided by the cardholder during checkout matches Acme’s record of the card’s expiration date.","enum":["MATCH","MISMATCH","NOT_PRESENT"],"type":"string"},"card_token":{"description":"Globally unique identifier for the card on which the 3DS authentication has occurred. Permitted values - 36-digit version 4 UUID (including hyphens).","format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000001"},"cardholder":{"description":"Object containing data about the cardholder provided during the transaction.","properties":{"address_match":{"description":"Indicates whether the shipping address and billing address provided by the cardholder are the same. This value - and assessment of whether the addresses match - is provided directly in the 3DS request and is not determined by Acme. Maps to EMV 3DS field addrMatch.","type":"boolean","example":true,"nullable":true},"billing_address":{"description":"Object containing data on the billing address provided during the transaction.","type":"object"},"email":{"description":"Email address provided by the cardholder during the transaction.","type":"string","example":"customer@me.com","nullable":true}}},"event_type":{"description":"The name of this event","type":"string","enum":["three_ds_authentication.created"],"example":"three_ds_authentication.created"}}}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}},"transfer_transaction.created":{"post":{"description":"Occurs when a transfer transaction is created.","requestBody":{"content":{"application/json":{"schema":{"examples":[{"category":"TRANSFER","created":"1973-04-04T23:39:00+00:00","descriptor":"Lorem ipsum dolor sit amet, consectetur adipisicing elit.","events":[],"event_type":"transfer_transaction.created","from_balance":[{"available_amount":8704,"created":"2005-07-19T20:21:02+00:00","currency":"USD","last_transaction_event_token":"2bd71066-f0b2-42b3-8b07-d3befc00a2ed","last_transaction_token":"943244f7-4543-421d-89f7-7542bb768fae","pending_amount":1971,"token":"9c9aa32f-16af-4c62-a68e-2b211b5bb864","total_amount":5775,"type":"ISSUING","updated":"1978-08-14T22:11:40+00:00"},{"available_amount":9174,"created":"1982-08-16T10:44:55+00:00","currency":"USD","last_transaction_event_token":"e8d05954-f0ef-41c0-aa7d-20809ebe4aa5","last_transaction_token":"0ee85f3c-707a-4e34-be59-86504d7cd320","pending_amount":2045,"token":"8f672659-644e-472a-a891-66ac53296a10","total_amount":5797,"type":"ISSUING","updated":"1983-01-10T01:39:14+00:00"},{"available_amount":114,"created":"1993-04-26T18:03:19+00:00","currency":"USD","last_transaction_event_token":"4cd6cf0a-6b3a-4327-9a62-2aa9f3236a13","last_transaction_token":"2ed37ff4-5105-4a65-b044-48ad381ab2b0","pending_amount":178,"token":"3f10a2ca-014d-4db9-9390-8d2436894cfa","total_amount":4718,"type":"ISSUING","updated":"2014-12-18T02:35:38+00:00"},{"available_amount":4974,"created":"2017-08-06T10:07:57+00:00","currency":"USD","last_transaction_event_token":"d7aa18b1-d4d2-45db-8d41-7b2c9de5c283","last_transaction_token":"3ef927f5-bb8a-4094-b68d-0ea36c9c0bd4","pending_amount":9103,"token":"8659443a-2c63-4699-a6bd-e00b697c50ef","total_amount":7260,"type":"RESERVE","updated":"1993-01-10T19:19:20+00:00"},{"available_amount":5259,"created":"1999-07-25T06:21:59+00:00","currency":"USD","last_transaction_event_token":"9bdc60ce-1206-4fad-819c-5b5eb793c223","last_transaction_token":"afdff06a-1b7c-4840-986b-0452b2dbc7dc","pending_amount":7006,"token":"8efadd92-f897-4202-bf82-c2ec35b464d3","total_amount":342,"type":"RESERVE","updated":"1991-08-12T03:02:29+00:00"}],"pending_amount":6937,"settled_amount":4691,"to_balance":[{"available_amount":1733,"created":"2014-03-19T06:15:34+00:00","currency":"USD","last_transaction_event_token":"a2f77055-ca65-4596-9869-aa6fd1ff5261","last_transaction_token":"20a83814-4ed0-4963-97f6-2aeb99063c7d","pending_amount":7677,"token":"4d1065d3-2240-4c4e-ab5f-ab69405fc7aa","total_amount":2776}]}],"allOf":[{"$ref":"#/components/schemas/Transfer"},{"type":"object","properties":{"event_type":{"type":"string","enum":["transfer_transaction.created"],"description":"The type of event that occurred.","example":"transfer_transaction.created"}}}]}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}}},"security":[{"ApiKeyAuth":[]}]}